/*!
 *
 * SpreadJS Library 16.0.4
 *
 * Copyright(c) GrapeCity, Inc.  All rights reserved.
 *
 * Licensed under the SpreadJS Commercial License.
 * us.sales@grapecity.com
 * http://www.grapecity.com/en/licensing/grapecity/
 *
 *
 */
!(function (a) {
    "object" == typeof module && "object" == typeof module.exports
        ? (module.exports = a(require("@grapecity/spread-sheets")))
        : "function" == typeof define && define.amd
            ? define(["@grapecity/spread-sheets"], a)
            : "object" == typeof exports
                ? (exports.Spread = a(require("@grapecity/spread-sheets")))
                : a(GC);
})(function (a) {
    (a = "object" == typeof a ? a : {}),
        (a.Spread = (function (a) {
            var b = {};
            function c(d) {
                if (b[d]) return b[d].exports;
                var e = (b[d] = { i: d, l: !1, exports: {} });
                return a[d].call(e.exports, e, e.exports, c), (e.l = !0), e.exports;
            }
            return (
                (c.m = a),
                (c.c = b),
                (c.d = function (a, b, d) {
                    c.o(a, b) || Object.defineProperty(a, b, { enumerable: !0, get: d });
                }),
                (c.r = function (a) {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
                }),
                (c.t = function (a, b) {
                    var d, e;
                    if ((1 & b && (a = c(a)), 8 & b)) return a;
                    if (4 & b && "object" == typeof a && a && a.__esModule) return a;
                    if (((d = Object.create(null)), c.r(d), Object.defineProperty(d, "default", { enumerable: !0, value: a }), 2 & b && "string" != typeof a))
                        for (e in a)
                            c.d(
                                d,
                                e,
                                function (b) {
                                    return a[b];
                                }.bind(null, e)
                            );
                    return d;
                }),
                (c.n = function (a) {
                    var b =
                        a && a.__esModule
                            ? function b() {
                                return a.default;
                            }
                            : function b() {
                                return a;
                            };
                    return c.d(b, "a", b), b;
                }),
                (c.o = function (a, b) {
                    return Object.prototype.hasOwnProperty.call(a, b);
                }),
                (c.p = ""),
                c((c.s = "./resource.es.entry.js"))
            );
        })({
            "./dist/core/core.res.es.js": function (a, b, c) {
                "use strict";
                var d, e, f, g;
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (d = c("Core")),
                    (e = c("Common")),
                    (f = d.GC$("meta[name='spreadjs culture']")),
                    f.length > 0 && ((g = d.GC$(f[f.length - 1]).attr("content")), null !== g && void 0 !== g && "es-ES" === g.toLowerCase() && e.Common.CultureManager.culture("es-ES")),
                    (b.Exp_NotSupported = "Excepción no soportada"),
                    (b.Exp_PasteExtentIsNull = "pasteExtent es nulo"),
                    (b.Exp_InvalidPastedArea = "El área pegada debe tener el mismo tamaño que el área copiada o cortada."),
                    (b.Exp_MultipleSelections = "Esta acción no funcionará en selecciones múltiples."),
                    (b.Exp_ChangePartOfArray = "No puede cambiar parte de un array."),
                    (b.Exp_InvalidAndSpace = "Inválido {0}: {1} (debe estar entre {2} y {3})."),
                    (b.Exp_SrcIsNull = "El argumento \'src\' es nulo"),
                    (b.Exp_DestIsNull = "El argumento \'dest\' es nulo"),
                    (b.Exp_InvalidCustomFunction = "función personalizada inválida"),
                    (b.Exp_InvalidCustomName = "nombre personalizado inválido"),
                    (b.Exp_IndexOutOfRange = 'El índice está fuera de rango.'),
                    (b.Exp_InvalidRange = 'Rango inválido'),
                    (b.Exp_ArgumentOutOfRange = 'Argumento fuera de rango'),
                    (b.Exp_PasteSourceCellsLocked = 'La hoja fuente de la celda está bloqueada.'),
                    (b.Exp_InvalidCopyPasteSize = 'Las áreas de copiar y pegar no son del mismo tamaño.'),
                    (b.Exp_PasteDestinationCellsLocked = 'La celda que está tratando de cambiar está protegida y por lo tanto es de sólo lectura.'),
                    (b.Exp_PasteChangeMergeCell = 'No puede cambiar parte de una celda fusionada.'),
                    (b.Tip_Row = 'Línea: '),
                    (b.Tip_Column = 'Columna: '),
                    (b.Tip_Column_Offset = 'Offset:' ),
                    (b.Tip_Height = 'Alto: {0} píxeles'),
                    (b.Tip_Width = 'Ancho: {0} pixeles'),
                    (b.NewTab = 'Nuevo...'),
                    (b.Exp_EmptyNamedStyle = 'El nombre del estilo nombrado no puede estar vacío o nulo'),
                    (b.Exp_SheetNameInvalid = 'El nombre de la hoja no puede estar vacío o contener estos caracteres: *, :, [, ], ?, \\, /'),
                    (b.Exp_SheetNameConflict = 'Ese nombre ya está tomado. Intente uno diferente.'),
                    (b.Exp_ArrayFromulaSpan = 'Las fórmulas de arrays no son válidas en las celdas fusionadas.'),
                    (b.Exp_DestSheetIsNull = 'destSheet es nula'),
                    (b.Exp_SheetIsNull = 'la hoja está vacía.'),
                    (b.Exp_OverlappingSpans = 'Esta operación causará la superposición de tramos.'),
                    (b.NeedCanvasSupport = 'Necesita un navegador que soporte completamente el HTML5 Canvas para ejecutar SpreadJS'),
                    (b.ARIA_Resize = "redimensionar"),
                    (b.ARIA_First = "primero"),
                    (b.ARIA_PreviousArrow = "flecha anterior"),
                    (b.ARIA_NextArrow = "flecha siguiente"),
                    (b.ARIA_Last = "último"),
                    (b.ARIA_PreviousButton = "botón anterior"),
                    (b.ARIA_NextButton = "botón siguiente"),
                    (b.ARIA_SheetTab = "pestaña hoja"),
                    (b.ARIA_NewSheet = "nueva hoja"),
                    (b.ARIA_Blank = "vacío"),
                    (b.ARIA_Scrollbar_Left_Button = "barra de desplazamiento botón izquierdo"),
                    (b.ARIA_Scrollbar_Top_Button = "barra de desplazamiento botón superior"),
                    (b.ARIA_Scrollbar_Thumb_Button = "barra de desplazamiento botón auxiliar"),
                    (b.ARIA_Scrollbar_Right_Button = "barra de desplazamiento botón derecho"),
                    (b.ARIA_Scrollbar_Bottom_Button = "barra de desplazamiento botón inferior"),
                    (b.ARIA_Scrollbar_TRACK_Button = "barra de desplazamiento botón seguimiento"),
                    (b.ARIA_Cell = "celda"),
                    (b.ARIA_HasValue = "tiene valor"),
                    (b.ARIA_HasFormula = "tiene fórmula {0}"),
                    (b.ARIA_HasComment = "tiene comentario {0}"),
                    (b.ARIA_RowHeader = "línea de encabezado"),
                    (b.ARIA_ColumnHeader = "columna de encabezado"),
                    (b.SHEET_NAME = "Hoja"),
                    (b.ls1 = [
                        "30303030303030685f4f7900000000000000000000673030303030723030527530303030307458303030529630303030303030008a4f3076763030303030303030304e667630915e3030698a30585430005f795569903030768a3030303030",
                        "b0ecfcd7b7c6a32a0f1a3e205370726561644a530a2cc8e9a4a2eb486e5429286fedfcabebb0836e7f6b3650558c66447e59020a55a192ee8468575fb5fcd0fc786e0042846a4d0392541c0e6e34086f0a0a3eb66de86b54f8c74f60554402",
                    ]),
                    (b.ls1a = "1"),
                    (b.ls2 = ["30303030303030685f4f790000000000000000000000303030303030303067526795306b30000000000065303030", "b0ecfcd7b7c6a32a0f1a3e205370726561644a53200ac8e9a4a2ebadfc6e09b91f936f8b8a207b307d20e5675902"]),
                    (b.ls3 = ["30303030306058308930303030303030303030008854303052753030303030303030300030303030303030305f89303000", "e9a4bbf3b9c5314c8b644b8a7e5b9367575f020afdc16e5429286b6fe9a4bbf3b9adfc2fc8e9a4a2ebadfc4cc58167590a"]),
                    (b.ls4 = ["6b30303030303030605830535f303030303030303030", "635744e9a4bbf3b9c53192d697674d7e5b9367575f02"]),
                    (b.ls5 = ["30303030303030685f4f790000000000000000000000303030303030303067526795307d4e3030303030", "b0ecfcd7b7c6a32a0f1a3e205370726561644a53200ac8e9a4a2ebadfc6e09b91f934c4286577e575f02"]),
                    (b.ls6 = ["30303030303030685f4f790000000000000000003030303030720067303030303030915e30796b303030303030", "b0ecfcd7b7c6a32a0f1a3e205370726561644a53c8e9a4a2eb480a2cd0fcb8e7f36e4d036f8162558c66447e59"]),
                    (b.ls7 = ["30303030306058308930303030303030303030008854303052753030303030303030300030303030303030305f89303000", "e9a4bbf3b9c5314c8b644b8a7e5b9367575f020afdc16e5429286b6fe9a4bbf3b9adfc2fc8e9a4a2ebadfc4cc58167590a"]),
                    (b.ls8 = ["6b30303030303030605830535f303030303030303030", "635744e9a4bbf3b9c53192d697674d7e5b9367575f02"]),
                    (b.Exp_InsertCopiedCutCells = "Esta selección no es válida. El área de copiar/pegar debe ser del mismo tamaño"),
                    (b.Exp_InsertCopiedCutCellsOnSpanTable = "Esto funcionará porque moverá las celdas de una tabla en su hoja de cálculo o hará que algunas celdas combinadas dejen de estarlo."),
                    (b.Exp_InsertCopiedCutCellsNoRange = "No se pueden insertar nuevas celdas ya que hay celdas no vacías que se extenderían más allá de la hoja de cálculo."),
                    (b.Exp_InvalidSortArrayFormulaInRange = "No se puede ordenar el rango actual ya que existe una fórmula de array."),
                    (b.Exp_InvalidSortSpanInRange = "No se puede ordenar el rango actual en función del alcance."),
                    (b.Exp_InvalidSortPartTableOrMultiTableInRange = "No se puede ordenar el rango actual como parte de la tabla o existe más de una tabla."),
                    (b.Exp_InvalidOperationInProtect = "La celda o gráfico que intenta cambiar se encuentra en una hoja protegida. Para hacer un cambio, desproteja la hoja."),
                    (b.EXP_IO = 'Excepción de lectura y escritura de archivos.'),
                    (b.EXP_FILE_FORMAT = 'Formato de archivo incorrecto.'),
                    (b.EXP_NO_PASSWORD = 'El archivo de Excel no se puede abrir porque el libro de trabajo/hoja de trabajo está protegido con contraseña.'),
                    (b.EXP_INVALID_PASSWORD = 'La contraseña especificada es incorrecta.'),
                    (b.NORMAL = 'Normal'),
                    (b.STEP = {
                    start: "comenzar carga {0}",
                    loadFileData: "cargar datos de {0} en la hoja de cálculo",
                    loadSheetData: "cargar datos de {0}",
                    startCalc: "comenzar reCálculo",
                    loadSheetFormula: "cargar fórmula de {0}",
                    parseFile: "analizar contenido de {0}"
                    });
            },
            "./dist/plugins/autoMerge/autoMerge.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }), (b.Exp_RangeIsIntersected = "El rango no debería cruzarse con los rangos existentes.");
            },
            "./dist/plugins/celltype/celltypes.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.OK = 'OK'),
                    (b.Cancel = 'Cancelar'),
                    (b.Calendar_ShortWeeks_1 = "LUN"),
                    (b.Calendar_ShortWeeks_2 = "MAR"),
                    (b.Calendar_ShortWeeks_3 = "MIER"),
                    (b.Calendar_ShortWeeks_4 = "JUE"),
                    (b.Calendar_ShortWeeks_5 = "VIE"),
                    (b.Calendar_ShortWeeks_6 = "SAB"),
                    (b.Calendar_ShortWeeks_7 = "DOM"),
                    (b.Calendar_Weeks_1 = "Lunes"),
                    (b.Calendar_Weeks_2 = "Martes"),
                    (b.Calendar_Weeks_3 = "Miércoles"),
                    (b.Calendar_Weeks_4 = "Jueves"),
                    (b.Calendar_Weeks_5 = "Viernes"),
                    (b.Calendar_Weeks_6 = "Sábado"),
                    (b.Calendar_Weeks_7 = "Domingo"),
                    (b.Calendar_ShortMonths_1 = "ENE"),
                    (b.Calendar_ShortMonths_2 = "FEB"),
                    (b.Calendar_ShortMonths_3 = "MAR"),
                    (b.Calendar_ShortMonths_4 = "ABR"),
                    (b.Calendar_ShortMonths_5 = "MAY"),
                    (b.Calendar_ShortMonths_6 = "JUN"),
                    (b.Calendar_ShortMonths_7 = "JUL"),
                    (b.Calendar_ShortMonths_8 = "AGO"),
                    (b.Calendar_ShortMonths_9 = "SEP"),
                    (b.Calendar_ShortMonths_10 = "OCT"),
                    (b.Calendar_ShortMonths_11 = "NOV"),
                    (b.Calendar_ShortMonths_12 = "DIC"),
                    (b.Calendar_Months_1 = "ENERO"),
                    (b.Calendar_Months_2 = "FEBRERO"),
                    (b.Calendar_Months_3 = "MARZO"),
                    (b.Calendar_Months_4 = "ABRIL"),
                    (b.Calendar_Months_5 = "MAYO"),
                    (b.Calendar_Months_6 = "JUNIO"),
                    (b.Calendar_Months_7 = "JULIO"),
                    (b.Calendar_Months_8 = "AGOSTO"),
                    (b.Calendar_Months_9 = "SEPTIEMBRE"),
                    (b.Calendar_Months_10 = "OCTUBRE"),
                    (b.Calendar_Months_11 = "NOVIEMBRE"),
                    (b.Calendar_Months_12 = "DICIEMBRE"),
                    (b.Calendar_Time_AM = "AM"),
                    (b.Calendar_Time_PM = "PM"),
                    (b.Calendar_EraName_1 = "M"),
                    (b.Calendar_EraName_2 = "T"),
                    (b.Calendar_EraName_3 = "S"),
                    (b.Calendar_EraName_4 = "H"),
                    (b.Calendar_FirstYear = "1"),
                    (b.Calendar_Today = "Hoy"),
                    (b.Calendar_LastMonth = "Ir al mes anterior"),
                    (b.Calendar_NextMonth = "Ir al mes próximo"),
                    (b.Calendar_LastYear = "Ir al año anterior"),
                    (b.Calendar_NextYear = "Ir al próximo año"),
                    (b.Calendar_LastTenYear = "Ir a los diez años anteriores"),
                    (b.Calendar_NextTenYear = "Ir a los próximos diez años"),
                    (b.Quarter_Format_1 = "Q1"),
                    (b.Quarter_Format_2 = "Q2"),
                    (b.Quarter_Format_3 = "Q3"),
                    (b.Quarter_Format_4 = "Q4"),
                    (b.ThemeColor = "Tema Colores"),
                    (b.StandardColor = "Colores estándar"),
                    (b.Calculator_DivideByZeroInfo = "No se puede dividir por cero."),
                    (b.Calculator_InvalidInputInfo = "Entrada inválida."),
                    (b.Calculator_SqrtParameterException = "Entrada inválida para la función."),
                    (b.Calculator_OverFlowInfo = "La operación aritmética resultó en un exceso"),
                    (b.MultiColumn_InvalidDataSource = "Fuente de datos inválida. La fórmula debería devolver un array."),
                    (b.DataObject_MeetLock = "No se puede insertar datos porque hay una celda bloqueada."),
                    (b.DataObject_MeetSpan = "No se puede insertar datos porque hay una celda fusionada."),
                    (b.DataObject_MeetTable = "No se puede insertar datos porque hay una tabla.");
            },
            "./dist/plugins/chart/chart.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.period = 'periodo'),
                    (b.movingAverage = 'Media móvil'),
                    (b.exponential = 'Exponencial'),
                    (b.linear = 'Linear'),
                    (b.logarithmic = 'Logarítmico'),
                    (b.polynomial = 'Polinomio'),
                    (b.power = 'Potencia');
            },
            "./dist/plugins/conditional/conditional.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_RuleIsNull = "El argumento \'rule\' es nulo"),
                    (b.Exp_NotSupported = "Excepción no soportada");
            },
            "./dist/plugins/contextMenu/context-menu.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.copy = "Copiar"),
                    (b.cut = "Cortar"),
                    (b.pasteOptions = "Opciones de pegar:"),
                    (b.pasteAll = "Todos"),
                    (b.pasteFormula = "Fórmulas"),
                    (b.pasteValues = "Valores"),
                    (b.pasteFormatting = "Formato"),
                    (b.pasteValuesFormatting = "Valores y formato"),
                    (b.pasteFormulaFormatting = "Fórmulas y formato"),
                    (b.clearContents = "Borrar contenido"),
                    (b.insertRows = "Insertar"),
                    (b.insertColumns = "Insertar"),
                    (b.deleteRows = "Eliminar"),
                    (b.deleteColumns = "Eliminar"),
                    (b.insertSheet = 'Insertar'),
                    (b.deleteSheet = 'Eliminar'),
                    (b.insertComment = "Insertar comentario"),
                    (b.filter = 'Filtrar'),
                    (b.sort = 'Ordenar'),
                    (b.insertCopiedCells = 'Insertar las celdas copiadas...'),
                    (b.insertCutCells = 'Insertar las celdas cortadas...'),
                    (b.shiftCellsRight = 'Mover celdas a la derecha'),
                    (b.shiftCellsDown = 'Mover celdas para abajo'),
                    (b.headerInsertCopiedCells = 'Insertar celdas copiadas'),
                    (b.headerInsertCutCells = 'Insertar las celdas cortadas'),
                    (b.slicerSortAscend = "Ordenar de la A a la Z"),
                    (b.slicerSortDescend = "Ordenar de la Z a la A"),
                    (b.sortAscend = 'Ordenar de la A a la Z'),
                    (b.sortDescend = 'Ordenar de la Z a la A'),
                    (b.hideRows = "Ocultar"),
                    (b.hideColumns = "Ocultar"),
                    (b.hideSheet = 'Ocultar'),
                    (b.unhideSheet = 'Mostrar'),
                    (b.unhideColumns = "Mostrar"),
                    (b.unhideRows = "Mostrar"),
                    (b.editComment = 'Editar comentario'),
                    (b.deleteComment = 'Borrar comentario'),
                    (b.toggleComment = 'Mostrar/Ocultar comentario'),
                    (b.removeSlicer = 'Eliminar'),
                    (b.removeFloatingObject = 'Eliminar'),
                    (b.tableInsert = "Insertar"),
                    (b.tableInsertRowsAbove = "Líneas de la tabla arriba"),
                    (b.tableInsertRowsBelow = "Líneas de la tabla debajo"),
                    (b.tableInsertColumnsLeft = "Columnas de la tabla a la izquierda"),
                    (b.tableInsertColumnsRight = "Columnas de la tabla a la derecha"),
                    (b.tableDelete = "Eliminar"),
                    (b.tableDeleteRows = "Líneas de la tabla"),
                    (b.tableDeleteColumns = "Columnas de la tabla"),
                    (b.hideSheetFailureInfo = 'Un libro de trabajo debe contener al menos una hoja visible.\nPara ocultar, eliminar o mover la(s) hoja(s) seleccionada(s), primero debe insertar una nueva hoja o desocultar una hoja ya oculta.'),
                    (b.pivotTableRefresh = "Refrescar"),
                    (b.pivotTableMove = "Mover"),
                    (b.pivotTableRemove_ = "Eliminar {0}"),
                    (b.pivotTableRemoveGrandTotal = "Eliminar GrandTotal"),
                    (b.pivotTableValueFieldSettings = "Configuración del campo de valor..."),
                    (b.pivotTableOptions = "Opciones PivotTable..."),
                    (b.pivotTableNumberFormat = "Formato número..."),
                    (b.pivotTableSort = "Ordenar"),
                    (b.pivotTableSummarizeValuesBy = "Resumir los valores por"),
                    (b.pivotTableSum = "Sumar"),
                    (b.pivotTableCount = "Contar"),
                    (b.pivotTableAverage = "Promedio"),
                    (b.pivotTableMax = "Máx"),
                    (b.pivotTableMin = "Mín"),
                    (b.pivotTableProduct = "Producto"),
                    (b.pivotTableDistinctCount = "Conteo de diferencias"),
                    (b.pivotTableMoreOptions = "Más opciones"),
                    (b.pivotTableShowValueAs = "Mostrar valor como"),
                    (b.pivotTableNoCalculation = "Sin cálculo"),
                    (b.pivotTableGrandTotal = "% de gran total"),
                    (b.pivotTableColumnTotal = "% de total columnas"),
                    (b.pivotTableRowTotal = "% de total líneas"),
                    (b.pivotTableOf = "% de..."),
                    (b.pivotTableParentRowTotal = "% de total de líneas padre"),
                    (b.pivotTableParentColumnTotal = "% de total de columnas padre"),
                    (b.pivotTableOfParentTotal = "% de total padre..."),
                    (b.pivotTableDifferenceFrom = "Diferencia de..."),
                    (b.pivotTablePercentDifferenceFrom = "% Diferencia de..."),
                    (b.pivotTableRunningTotalIN = "Total acumulado en..."),
                    (b.pivotTablePercentRunningTotalIn = "% Total acumulado en..."),
                    (b.pivotTableRankSmallestToLargest = "Rango del más pequeño al más grande..."),
                    (b.pivotTableRankLargestToSmallest = "Rango de mayor a menor..."),
                    (b.pivotTableIndex = "Índice"),
                    (b.pivotTableShowDetails = "Mostrar detalles"),
                    (b.pivotTableGroup = "Agrupar..."),
                    (b.pivotTableUnGroup = "Desagrupar..."),
                    (b.pivotTableExpandOrCollapse = "Expandir/Contraer"),
                    (b.pivotTableFilter = "Filtrar"),
                    (b.pivotTableSubtotal_ = "Subtotal {0}"),
                    (b.pivotTableHideFieldList = "Ocultar lista de campos"),
                    (b.pivotTableFieldSettings = "Parámetros de campo..."),
                    (b.pivotTableClearFilterFrom_ = "Borrar filtro desde {0}"),
                    (b.pivotTableKeepOnlySelectedItems = "Conservar sólo los elementos seleccionados"),
                    (b.pivotTableHideSelectedItems = "Ocultar los elementos seleccionados"),
                    (b.pivotTableTop10 = "Top 10..."),
                    (b.pivotTableLabelFilters = "Filtros de etiquetas..."),
                    (b.pivotTableLabelFilters_Date = "Filtros de fecha..."),
                    (b.pivotTableValueFilters = "Filtros de valor..."),
                    (b.pivotTableExpand = "Expandir"),
                    (b.pivotTableCollapse = "Contraer"),
                    (b.pivotTableExpandEntireField = "Expandir todo el campo"),
                    (b.pivotTableCollapseEntireField = "Contraer todo el campo"),
                    (b.pivotTableCollapseTo_ = "Contraer a {0}"),
                    (b.pivotTableExpandTo_ = "Expandir a {0}"),
                    (b.pivotTableMove_ToBeginning = "Mover {0} al inicio"),
                    (b.pivotTableMove_Up = "Mover {0} arriba"),
                    (b.pivotTableMove_Down = "Mover {0} abajo"),
                    (b.pivotTableMove_ToEnd = "Mover {0} al final"),
                    (b.pivotTableMove_ToLeft = "Mover {0} a la izquierda"),
                    (b.pivotTableMove_ToRight = "Mover {0} a la derecha"),
                    (b.pivotTableMove_ToColumns = "Mover {0} columnas"),
                    (b.sigmaValue = "\u2211 Valores"),
                    (b.sigmaValueTemp = "Valores"),
                    (b.pivotTableAscend = "Ordenar de menor a mayor"),
                    (b.pivotTableSortDescend = "Ordenar de mayor a menor"),
                    (b.pinRows = "Fijar/Desfijar líneas"),
                    (b.pinColumns = "Fijar/Desfijar columnas"),
                    (b.promote = "Promocionar"),
                    (b.demote = "Degradar"),
                    (b.moveUp = "Mover hacia arriba"),
                    (b.moveDown = "Mover hacia abajo"),
                    (b.addAfter = "Agregar después"),
                    (b.addBefore = "Agregar antes"),
                    (b.addAbove = "Agregar arriba"),
                    (b.addBelow = "Agregar abajo"),
                    (b.expandAllLevels = "Expandir todos los niveles"),
                    (b.collapseAllLevels = "Contraer todos los niveles"),
                    (b.expandLevel1 = "Expandir hasta el nivel 1"),
                    (b.expandLevel2 = "Expandir hasta el nivel 2"),
                    (b.expandLevel3 = "Expandir hasta el nivel 3"),
                    (b.expandLevel4 = "Expandir hasta el nivel 4"),
                    (b.expandLevel5 = "Expandir hasta el nivel 5"),
                    (b.expandLevel6 = "Expandir hasta el nivel 6"),
                    (b.expandLevel7 = "Expandir hasta el nivel 7"),
                    (b.expandLevel8 = "Expandir hasta el nivel 8"),
                    (b.expandLevel9 = "Expandir hasta el nivel 9"),
                    (b.paste = "Pegar");
            },
            "./dist/plugins/data/data.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }), (b.Exp_NotSupportedDataSource = "¡La fuente de datos no está soportada!");
            },
            "./dist/plugins/exportPDF/printPdf.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_FileIOError = "Error de lectura y escritura de archivos."),
                    (b.Exp_FontError = "No es un formato de fuente soportado o una fuente PDF estándar.");
            },
            "./dist/plugins/fill/fill.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.CopyCells = 'Copiar celdas'),
                    (b.FillSeries = 'Llenar series'),
                    (b.FillFormattingOnly = 'Llenar sólo formato'),
                    (b.FillWithoutFormatting = 'Llenar sin formato'),
                    (b.Exp_NumberOnly = 'Sólo funciona para números'),
                    (b.Exp_RangeContainsMergedCell = 'El rango no debe tener celdas fusionadas.'),
                    (b.Exp_TargetContainsMergedCells = 'El rango objetivo no debe tener celdas fusionadas.'),
                    (b.Exp_MergedCellsIdentical = 'Esta operación requiere que las celdas fusionadas sean de tamaño idéntico.'),
                    (b.Exp_FillRangeContainsMergedCell = 'No puede llenar un rango que contiene una celda fusionada.'),
                    (b.Exp_FillCellsReadOnly = 'Las celdas que está tratando de llenar están protegidas y por lo tanto son de sólo lectura.'),
                    (b.Exp_ChangeMergedCell = 'No puede cambiar parte de la celda fusionada.'),
                    (b.Exp_ColumnReadOnly = 'La columna que está tratando de cambiar está protegida y por lo tanto es de sólo lectura.'),
                    (b.Exp_RowReadOnly = 'La línea que intenta cambiar está protegida y por lo tanto es de sólo lectura.'),
                    (b.Exp_CellReadOnly = 'La celda que intenta cambiar está protegida y por lo tanto es de sólo lectura.'),
                    (b.Exp_RangeIsNull = 'el rango está vacío'),
                    (b.Exp_ChangePartOfArray = 'No puede cambiar parte de un array.');
            },
            "./dist/plugins/filter/filter.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_InvalidColumnIndex = 'Índice de columnas inválido.'),
                    (b.SortAscending = 'Orden ascendente'),
                    (b.SortDescending = 'Orden descendente'),
                    (b.OK = 'OK'),
                    (b.Cancel = 'Cancelar'),
                    (b.Search = 'Buscar'),
                    (b.CheckAll = 'Marcar todos'),
                    (b.UncheckAll = 'Desmarcar todo'),
                    (b.Blanks = '(Vacíos)'),
                    (b.Exp_FilterItemIsNull = 'FilterItem es nulo.'),
                    (b.Show = 'Mostrar'),
                    (b.ShowRows = 'Mostrar líneas en las que:'),
                    (b.And = 'Y'),
                    (b.Or = 'O'),
                    (b.SortColor = 'Ordenar por color'),
                    (b.FilterColor = 'Filtrar por color'),
                    (b.FilterCellTitle = 'Filtrar por color de celda'),
                    (b.FilterFontTitle = 'Filtrar por color de fuente'),
                    (b.SortCellTitle = 'Ordenar por el color de celda'),
                    (b.SortFontTitle = 'Ordenar por el color de fuente'),
                    (b.FontColor = 'Más colores de fuente.'),
                    (b.CellColor = 'Más colores de celdas.'),
                    (b.NoFill = 'Sin llenar'),
                    (b.Automatic = 'Automático'),
                    (b.Clear = 'Borrar el filtro de {0}'),
                    (b.TextFilter = 'Filtros de texto'),
                    (b.DateFilter = 'Filtros de fecha'),
                    (b.NumberFilter = 'Filtros de número'),
                    (b.Custom = 'Filtro personalizado.'),
                    (b.Equal = 'Igual...'),
                    (b.NotEqual = 'No es igual...'),
                    (b.GreaterThan = 'Mayor que...'),
                    (b.GreaterOrEquals = 'Mayor que o igual a...'),
                    (b.LessThan = 'Menor que...'),
                    (b.LessThanOrEquals = 'Menor que o igual a...'),
                    (b.Between = 'Entre...'),
                    (b.Top10 = 'Top 10...'),
                    (b.AboveAverage = 'Sobre el promedio'),
                    (b.BelowAverage = 'Por debajo del promedio'),
                    (b.Begin = 'Comienza por...'),
                    (b.End = 'Termina en...'),
                    (b.Contain = 'Contiene...'),
                    (b.NotContain = 'No contiene...'),
                    (b.Before = 'Antes...'),
                    (b.After = 'Después...'),
                    (b.Tomorrow = 'Mañana'),
                    (b.Today = 'Hoy'),
                    (b.Yesterday = 'Ayer'),
                    (b.NextWeek = 'La próxima semana'),
                    (b.ThisWeek = 'Esta semana'),
                    (b.LastWeek = 'La semana pasada'),
                    (b.NextMonth = 'El próximo mes'),
                    (b.ThisMonth = 'Este mes'),
                    (b.LastMonth = 'El mes pasado'),
                    (b.NextQuarter = 'El próximo trimestre'),
                    (b.ThisQuarter = 'Este trimestre'),
                    (b.LastQuarter = 'El último trimestre'),
                    (b.NextYear = 'El próximo año'),
                    (b.ThisYear = 'Este año'),
                    (b.LastYear = 'El año pasado'),
                    (b.añoToDate = 'Año a la fecha'),
                    (b.AllDates = 'Todas las fechas en el período'),
                    (b.Top10Filter = 'Los 10 mejores filtros automáticos'),
                    (b.CustomTitle = 'Filtro automático personalizado'),
                    (b.ColorTitle = 'Colores de celdas disponibles'),
                    (b.top = 'arriba'),
                    (b.bottom = 'abajo'),
                    (b.SortCell = 'Seleccione un color de celda para ordenar por:'),
                    (b.SortFont = 'Seleccione un color de fuente para ordenar por:'),
                    (b.FilterCell = 'Seleccione un color de celda para filtrar por:'),
                    (b.FilterFont = 'Seleccione un color de fuente para filtrar por:'),
                    (b.Selected = 'Seleccionado:'),
                    (b.IsEquals = 'equivale a'),
                    (b.NotEquals = 'no es igual a'),
                    (b.IsGreaterThan = 'es mayor que'),
                    (b.IsGreaterOrEqual = 'es mayor o igual que'),
                    (b.IsLess = 'es menor que'),
                    (b.LessOrEqual = 'es menor o igual que'),
                    (b.IsBeginWith = 'comienza por'),
                    (b.NotBeginWith = 'no empieza por'),
                    (b.IsEndWith = 'termina en'),
                    (b.NotEndWith = 'no termina en'),
                    (b.IsContain = 'contiene'),
                    (b.NotContains = 'no contiene'),
                    (b.IsAfter = 'está después de'),
                    (b.AfterOrEqual = 'está después o es igual a'),
                    (b.IsBefore = 'está antes de'),
                    (b.BeforeOrEqual = 'es anterior o igual a'),
                    (b.Q1 = 'Trimestre 1'),
                    (b.Q2 = 'Trimestre 2'),
                    (b.Q3 = 'Trimestre 3'),
                    (b.Q4 = 'Trimestre 4'),
                    (b.Jan = 'Enero'),
                    (b.Feb = 'Febrero'),
                    (b.Mar = 'Marzo'),
                    (b.Apr = 'Abril'),
                    (b.May = 'Mayo'),
                    (b.Jun = 'Junio'),
                    (b.Jul = 'Julio'),
                    (b.Aug = 'Agosto'),
                    (b.Sep = 'Septiembre'),
                    (b.Oct = 'Octubre'),
                    (b.Nov = 'Noviembre'),
                    (b.Dec = 'Diciembre'),
                    (b.Explain1 = 'Utilizar ? para representar todo carácter individual'),
                    (b.Explain2 = 'Utilizar * para representar toda serie de caracteres'),
                    (b.Year = ''),
                    (b.Day = ''),
                    (b.add_current_filter = 'Añadir la selección actual al filtro'),
                    (b.invalidCondition = "Error in parse line");
            },
            "./dist/plugins/floatingObject/floatingobject.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_FloatingObjectHasSameNameError = 'La hoja de trabajo actual ya tiene un objeto flotante con el mismo nombre.'),
                    (b.Exp_FloatingObjectNameEmptyError = 'El objeto flotante debe tener un nombre');
            },
            "./dist/plugins/group/group.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_InvalidIndex = 'Índice inválido'),
                    (b.Exp_InvalidCount = 'Conteo inválido'),
                    (b.Exp_InvalidLevel = 'Nivel inválido'),
                    (b.Exp_GroupInfoIsNull = 'groupInfo es nulo'),
                    (b.Exp_GROUP_PROTECTED = "No puede utilizar este comando en una hoja protegida. Para utilizar este comando, primero debe desproteger la hoja.");
            },
            "./dist/plugins/io/io.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                (b.EXP_IO = "Excepción de lectura y escritura de archivo."),
                (b.EXP_FILE_FORMAT = "Formato de archivo incorrecto."),
                (b.GET_PARTIAL_VALUES_ERROR_MSG = "error de archivo");
            },
            "./dist/plugins/outlineColumn/outlineColumn.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_GROUP_PROTECTED =
                        "No puede utilizar este comando en una hoja protegida. Para utilizar este comando, primero debe desproteger la hoja.");
            },
            "./dist/plugins/pivot/pivot.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.RepeatName = "Repetir nombre"),
                    (b.NotExist = "No existe"),
                    (b.SubtotalType_Prefix_0 = "Media de "),
                    (b.SubtotalType_Prefix_1 = "Conteo de "),
                    (b.SubtotalType_Prefix_2 = "CountNums de "),
                    (b.SubtotalType_Prefix_3 = "Máx de "),
                    (b.SubtotalType_Prefix_4 = "Mín de "),
                    (b.SubtotalType_Prefix_5 = "Producto de "),
                    (b.SubtotalType_Prefix_6 = "StdDev de "),
                    (b.SubtotalType_Prefix_7 = "StdDevp de "),
                    (b.SubtotalType_Prefix_8 = "Suma de "),
                    (b.SubtotalType_Prefix_9 = "Varr de "),
                    (b.SubtotalType_Prefix_10 = "Varp de "),
                    (b.ColumnLabels = "Etiquetas de las columnas"),
                    (b.Total = " Total"),
                    (b.All = "Todo"),
                    (b.MultipleItems = "Elementos múltiples"),
                    (b.RowLabels = "Etiquetas de las líneas"),
                    (b.GrandTotal = "Gran Total"),
                    (b.Values = "Valores"),
                    (b.PivotPanel_Title = "Campos PivotTable"),
                    (b.PivotPanel_ReportText = "Elija los campos que desea añadir al informe"),
                    (b.PivotPanel_SearchPlaceholder = "Buscar"),
                    (b.PivotPanel_FieldAreaText = "Arrastre los campos entre las áreas de abajo:"),
                    (b.PivotPanel_FiltersItemsTitle = "Filtros"),
                    (b.PivotPanel_RowsItemsTitle = "Líneas"),
                    (b.PivotPanel_ColumnsItemsTitle = "Columnas"),
                    (b.PivotPanel_ValuesItemsTitle = "Valores"),
                    (b.PivotPanel_DeferUpdateText = "Aplazar la actualización del diseño"),
                    (b.EmptyPivotTable_PromptMessage1 = "Haga clic en esta área para trabajar con el informe PivotTable"),
                    (b.EmptyPivotTable_PromptMessage2 = "Active la lista de campos PivotTable para trabajar con ella"),
                    (b.PivotPanel_Update = "Actualizar"),
                    (b.PivotPanel_DropDownList_Up = "Subir de nivel"),
                    (b.PivotPanel_DropDownList_Down = "Bajar de nivel"),
                    (b.PivotPanel_DropDownList_Beginning = "Ir al inicio"),
                    (b.PivotPanel_DropDownList_End = "Ir al final"),
                    (b.PivotPanel_DropDownList_ReportFilter = "Mover al filtro de informes"),
                    (b.PivotPanel_DropDownList_Row = "Mover a las etiquetas de las filas"),
                    (b.PivotPanel_DropDownList_Col = "Mover a las etiquetas de las columnas"),
                    (b.PivotPanel_DropDownList_Values = "Mover a valores"),
                    (b.PivotPanel_DropDownList_Remove = "Eliminar campo"),
                    (b.PivotPanel_DropDownList_Set = "Parámetros de campo..."),
                    (b.PivotPanel_DropDownList_ValueSet = "Parámetros de los campos de valor..."),
                    (b.PivotPanel_Fields_MoveTo_ReportField = "Añadir al filtro de informes"),
                    (b.PivotPanel_Fields_MoveTo_RowLabel = "Añadir a las etiquetas de las filas"),
                    (b.PivotPanel_Fields_MoveTo_ColLabel = "Añadir a las etiquetas de las columnas"),
                    (b.PivotPanel_Fields_MoveTo_Value = "Añadir a los valores"),
                    (b.wmk1 = "4164642d6f6e73204e6f7420456e61626c65643a205069766f745461626c65"),
                    (b.wmk2 = "4164642d6f6e7320456e61626c65643a205069766f745461626c65"),
                    (b.PivotPanel_LabelOrValue_ClearFilter = "Borrar el filtro"),
                    (b.PivotPanel_ValueFilterOrLabel_Equals = "Igual..."),
                    (b.PivotPanel_ValueFilterOrLabel_NotEqual = "No es igual..."),
                    (b.PivotPanel_ValueFilterOrLabel_GreaterThan = "Mayor que..."),
                    (b.PivotPanel_ValueFilterOrLabel_GreaterOrTo = "Mayor o igual que..."),
                    (b.PivotPanel_ValueFilterOrLabel_LessThan = "Menor que..."),
                    (b.PivotPanel_ValueFilterOrLabel_LessOrTo = "Menor o igual que..."),
                    (b.PivotPanel_ValueFilterOrLabel_Between = "Entre..."),
                    (b.PivotPanel_ValueFilterOrLabel_NotBetween = "No entre..."),
                    (b.PivotPanel_ValueFilter_Top10 = "Top 10..."),
                    (b.PivotPanel_ValueFilterOrLabel_IsBeginWith = "Comienza por..."),
                    (b.PivotPanel_ValueFilterOrLabel_NotBegin = "No comienza por..."),
                    (b.PivotPanel_ValueFilterOrLabel_End = "Termina en..."),
                    (b.PivotPanel_ValueFilterOrLabel_NotEndWith = "No termina en..."),
                    (b.PivotPanel_ValueFilterOrLabel_Contain = "Contiene..."),
                    (b.PivotPanel_ValueFilterOrLabel_NotContain = "No contiene..."),
                    (b.ValueFilterOrLabel_Equals = "Es igual..."),
                    (b.ValueFilterOrLabel_NotEqual = "No es igual..."),
                    (b.ValueFilterOrLabel_GreaterThan = "es mayor que..."),
                    (b.ValueFilterOrLabel_GreaterOrTo = "Es mayor o..."),
                    (b.ValueFilterOrLabel_LessThan = "Es menor que..."),
                    (b.ValueFilterOrLabel_LessOrTo = "Es menor o..."),
                    (b.ValueFilterOrLabel_Between = "Está entre..."),
                    (b.ValueFilterOrLabel_NotBetween = "No está entre..."),
                    (b.ValueFilterOrLabelSelect_GreaterThan = "es mayor que..."),
                    (b.ValueFilterOrLabelSelect_GreaterOrTo = "Es mayor o..."),
                    (b.ValueFilterOrLabelSelect_LessThan = "Es menor que..."),
                    (b.ValueFilterOrLabelSelect_LessOrTo = "Es menor o..."),
                    (b.ValueFilterOrLabelSelect_Between = "Está entre..."),
                    (b.ValueFilterOrLabelSelect_NotBetween = "No está entre..."),
                    (b.ValueFilterOrLabel_IsBeginWith = "Comienza por..."),
                    (b.ValueFilterOrLabel_NotBegin = "No comienza por..."),
                    (b.ValueFilterOrLabel_End = "Termina en..."),
                    (b.ValueFilterOrLabel_NotEndWith = "No termina en..."),
                    (b.ValueFilterOrLabel_Contain = "Contiene..."),
                    (b.ValueFilterOrLabel_NotContain = "No contiene..."),
                    (b.PivotPanel_ValueFilterOrLabel_Before = "Antes..."),
                    (b.PivotPanel_ValueFilterOrLabel_After = "Después..."),
                    (b.PivotPanel_ValueFilterOrLabel_Tomorrow = "Mañana"),
                    (b.PivotPanel_ValueFilterOrLabel_Today = "Hoy"),
                    (b.PivotPanel_ValueFilterOrLabel_Yesterday = "Ayer"),
                    (b.PivotPanel_ValueFilterOrLabel_NextWeek = "Próxima semana"),
                    (b.PivotPanel_ValueFilterOrLabel_ThisWeek = "Esta semana"),
                    (b.PivotPanel_ValueFilterOrLabel_LastWeek = "La semana pasada"),
                    (b.PivotPanel_ValueFilterOrLabel_NextMonth = "Próximo mes"),
                    (b.PivotPanel_ValueFilterOrLabel_ThisMonth = "Este mes"),
                    (b.PivotPanel_ValueFilterOrLabel_LastMonth = "El mes pasado"),
                    (b.PivotPanel_ValueFilterOrLabel_NextQuarter = "Próximo trimestre"),
                    (b.PivotPanel_ValueFilterOrLabel_ThisQuarter = "Este trimestre"),
                    (b.PivotPanel_ValueFilterOrLabel_LastQuarter = "El trimestre pasado"),
                    (b.PivotPanel_ValueFilterOrLabel_NextYear = "Próximo año"),
                    (b.PivotPanel_ValueFilterOrLabel_ThisYear = "Este año"),
                    (b.PivotPanel_ValueFilterOrLabel_LastYear = "El año pasado"),
                    (b.PivotPanel_ValueFilterOrLabel_YearToDate = "Año a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_MonthToDate = "Mes a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_QuarterToDate = "Trimestre a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_ParallelYearToDate = "Año paralelo a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_ParallelMonthToDate = "Mes paralelo a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_ParallelQuarterToDate = "Trimestre paralelo a la fecha"),
                    (b.PivotPanel_ValueFilterOrLabel_AllDates = "Todas las fechas del período"),
                    (b.PivotPanel_ValueFilterOrLabel_Custom = "Filtro personalizado..."),
                    (b.PivotPanel_Sort_A_Z = "Ordenar de la A a la Z"),
                    (b.PivotPanel_Sort_Z_A = "Ordenar de la Z a la A"),
                    (b.PivotPanel_Sort_Smallest_Largest = "Ordenar de menor a mayor"),
                    (b.PivotPanel_Sort_Largest_Smallest = "Ordenar de mayor a menor"),
                    (b.PivotPanel_Sort_More = "Más opciones de ordenación..."),
                    (b.PivotPanel_Filter_Clear = "Borrar filtro de {0}"),
                    (b.PivotPanel_Filter_Label = "Filtros de etiquetas"),
                    (b.PivotPanel_Filter_Value = "Filtros de valor"),
                    (b.Ok = "OK"),
                    (b.Cancel = "Cancelar"),
                    
                    (b.NumberFormat = "Formato"),
                    (b.LabelFormat = "Formato de la etiqueta"),
                    (b.Number = "Número"),
                    (b.FormatCells = "Formato de celdas"),
                    (b.Sample = "Muestra"),
                    (b.Type = "Tipo"),
                    (b.CustomFormats = [
                        "General",
                        "0",
                        "0.00",
                        "#,##0",
                        "#,##0.00",
                        "#,##0;(#,##0)",
                        "#,##0;[Red](#,##0)",
                        "#,##0.00;(#,##0.00)",
                        "#,##0.00;[Red](#,##0.00)",
                        "$#,##0;($#,##0)",
                        "$#,##0;[Red]($#,##0)",
                        "$#,##0.00;($#,##0.00)",
                        "$#,##0.00;[Red]($#,##0.00)",
                        "0%",
                        "0.00%",
                        "0.00E+00",
                        "##0.0E+0",
                        "# ?/?",
                        "# ??/??",
                        "m/d/yyyy",
                        "d-mmm-yy",
                        "d-mmm",
                        "mmm-yy",
                        "h:mm AM/PM",
                        "h:mm:ss AM/PM",
                        "hh:mm",
                        "hh:mm:ss",
                        "m/d/yyyy hh:mm",
                        "mm:ss",
                        "mm:ss.0",
                        "@",
                        "[h]:mm:ss",
                        "$ #,##0;$ (#,##0);$ \"-\";@",
                        " #,##0; (#,##0); \"-\";@",
                        "$ #,##0.00;$ (#,##0.00);$ \"-\"??;@",
                        " #,##0.00; (#,##0.00); \"-\"??;@",
                        "hh:mm:ss",
                        "00000",
                        "# ???/???",
                        "000-00-0000",
                        "dddd, mmmm dd, yyyy",
                        "m/d;@",
                        "[<=9999999]###-####;(###) ###-####",
                        "# ?/8"
                    ]),

                    (b.Select_Field = "Seleccionar campo"),
                    (b.PivotPanel_Filter_SelectAll = "Seleccionar todo"),
                    (b.PivotPanel_Filter_NoSelectAll = "Deseleccionar todo"),
                    (b.PivotPanel_Filter_Search = "buscar"),
                    (b.Label_Title = "Filtro de etiquetas"),
                    (b.Label_Show = "Mostrar los elementos para los que la etiqueta"),
                    (b.Use_Single_Character = "Utilice ? para representar todo carácter individual"),
                    (b.Use_Series_Characters = "Utilice * para representar todos los caracteres series"),
                    (b.Value_Show = "Mostrar elementos para los que"),
                    (b.Value_Title = "Filtro de valores"),
                    (b.Top_Ten_Filter = "Filtro Top 10 "),
                    (b.TopTenShow = "mostrar"),
                    (b.Top = "Arriba"),
                    (b.Bottom = "Abajo"),
                    (b.Top_Item = "elementos"),
                    (b.Top_Percent = "Porcentaje"),
                    (b.Top_Sum = "Sums"),
                    (b.ByJoiner = "por"),
                    (b.AndJoiner = "y"),
                    (b.Q1 = "Trimestre 1"),
                    (b.Q2 = "Trimestre 2"),
                    (b.Q3 = "Trimestre 3"),
                    (b.Q4 = "Trimestre 4"),
                    (b.Jan = "Enero"),
                    (b.Feb = "Febrero"),
                    (b.Mar = "Marzo"),
                    (b.Apr = "Abril"),
                    (b.May = "Mayo"),
                    (b.Jun = "Junio"),
                    (b.Jul = "Julio"),
                    (b.Aug = "Agosto"),
                    (b.Sep = "Septiembre"),
                    (b.Oct = "Octubre"),
                    (b.Nov = "Noviembre"),
                    (b.Dec = "Diciembre"),
                    (b.IsBefore = "es anterior a"),
                    (b.IsBeforeOrEqual = "es anterior o igual a"),
                    (b.IsAfter = "es después de"),
                    (b.IsAfterOrEqual = "es posterior o igual a"),
                    (b.IsBetween = "está entre"),
                    (b.IsNotBetween = "no está entre"),
                    (b.DateFilterTitle = "Filtro de fecha"),
                    (b.DateShow = "Mostrar elementos para los que la fecha"),
                    (b.WholeDays = "Días enteros"),
                    (b.FieldSetting = "Parámetros del campo"),
                    (b.ValueSetting = "Parámetros del campo de valor"),
                    (b.SourceName = "Nombre de la fuente:"),
                    (b.CustomName = "Nombre personalizado:"),
                    (b.SummarizeValue = "Resumir valores por"),
                    (b.SummarizeValueField = "Resumir campo de valores por"),
                    (b.ChooseType = "Elija el tipo de cálculo que desea utilizar para resumir los datos del campo seleccionado"),
                    (b.Sum = "Suma"),
                    (b.Count = "Conteo"),
                    (b.Average = "Promedio"),
                    (b.Máx = "Máx"),
                    (b.Mín = "Mín"),
                    (b.Product = "Producto"),
                    (b.CountNumbers = "Contar números"),
                    (b.StdDev = "StdDev"),
                    (b.StdDevp = "StdDevp"),
                    (b.Var = "Var"),
                    (b.Varp = "Varp"),
                    (b.sigmaValue = "\u2211 Valores"),
                    (b.DateFormatError = "Esta no es una fecha válida"),
                    (b.noCalculation = "Sin cálculo"),
                    (b.percentGrandTotal = "% del total general"),
                    (b.percentColumnTotal = "% del total de columnas"),
                    (b.percentRowTotal = "% del total de filas"),
                    (b.percentEllipsis = "% de ..."),
                    (b.percentParentRowTotal = "% del total de  filas padre"),
                    (b.percentParentColumnTotal = "% del total de columnas padre"),
                    (b.percentParentTotal = "% del total padre..."),
                    (b.difference = "Diferencia de..."),
                    (b.percentDifference = "De la diferencia de..."),
                    (b.runningTotal = "Total de ejecución en..."),
                    (b.percentRunningTotal = "% de total en ejecución..."),
                    (b.rankSmallestLargest = "Rango del más pequeño al más grande..."),
                    (b.rankLargestSmallest = "Rango del más grande al más pequeño..."),
                    (b.index = "Índice"),
                    (b.showValueAsDialog = [
                        '', '', '', '',
                        "% de ",
                        '', '',
                        "% del total padre ",
                        "Diferencia de ",
                        "De la diferencia de ",
                        "Total de ejecución en ",
                        "% de total en ejecución ",
                        "Rango del más pequeño al más grande ",
                        "Rango del más grande al más pequeño",
                        ''
                    ]),
                    (b.baseField = "Campo base:"),
                    (b.baseItem = "Elemento base:"),
                    (b.grouping = "Agrupar"),
                    (b.auto = "Auto"),
                    (b.startingAt = "A partir de:"),
                    (b.endingAt = "Terminando en:"),
                    (b.groupBy = "Por:"),
                    (b.seconds = "Segundos"),
                    (b.minutes = "Minutos"),
                    (b.hours = "Horas"),
                    (b.days = "Días"),
                    (b.months = "Meses"),
                    (b.quarters = "Trimestres"),
                    (b.años = "Años"),
                    (b.numberOfDays = "Número de días"),
                    (b.NoHaveSpread = "excepción del libro"),
                    (b.SourceError = "Excepción de datos fuente, no se puede crear el informe PivotTable"),
                    (b.SourceNotIsTableNameOrFormula = "los datos fuente no son el nombre de la tabla ni la fórmula"),
                    (b.SourceDataOnlyOne = "Este comando requiere al menos dos filas de datos fuente. No se puede utilizar el comando en una selección en una sola fila"),
                    (b.FieldAreaLimited = "El campo que está moviendo no puede colocarse en esa área del informe."),
                    (b.Views = "Vistas"),
                    (b.Group = "Grupo"),
                    (b.param_error = "el parámetro es nulo o no está definido"),
                    (b.EmptyValueFieldError = "Necesita al menos un campo en el área de Valores para poder aplicar un filtro de valores"),
                    (b.DefaultPivotTableViewName = "PivotView"),
                    (b.toolTipContent_Row = "Línea: "),
                    (b.toolTipContent_Column = "Columna: "),
                    (b.toolTipContent_Value = "Valor: "),
                    (b.toolTipContent_NoValue = "Sin valor"),
                    (b.deferLayoutUpdate = "Aplazar la actualización del diseño");
                    function d() {
                    return [
                        b.ValueFilterOrLabel_Equals,
                        b.ValueFilterOrLabel_NotEqual,
                        b.ValueFilterOrLabel_IsBeginWith,
                        b.ValueFilterOrLabel_NotBegin,
                        b.ValueFilterOrLabel_End,
                        b.ValueFilterOrLabel_NotEndWith,
                        b.ValueFilterOrLabel_Contain,
                        b.ValueFilterOrLabel_NotContain,
                        b.ValueFilterOrLabelSelect_GreaterThan,
                        b.ValueFilterOrLabelSelect_GreaterOrTo,
                        b.ValueFilterOrLabelSelect_LessThan,
                        b.ValueFilterOrLabelSelect_LessOrTo,
                        b.ValueFilterOrLabelSelect_Between,
                        b.ValueFilterOrLabelSelect_NotBetween,
                    ];
                }
                b.getStringLabelFilterItemText = d;
                function e() {
                    return [b.ValueFilterOrLabel_Equals, b.ValueFilterOrLabel_NotEqual, b.IsBefore, b.IsBeforeOrEqual, b.IsAfter, b.IsAfterOrEqual, b.IsBetween, b.IsNotBetween];
                }
                b.getDateLabelFilterItemText = e;
                function f() {
                    return [
                        b.ValueFilterOrLabel_Equals,
                        b.ValueFilterOrLabel_NotEqual,
                        b.ValueFilterOrLabelSelect_GreaterThan,
                        b.ValueFilterOrLabelSelect_GreaterOrTo,
                        b.ValueFilterOrLabelSelect_LessThan,
                        b.ValueFilterOrLabelSelect_LessOrTo,
                        b.ValueFilterOrLabelSelect_Between,
                        b.ValueFilterOrLabelSelect_NotBetween,
                    ];
                }
                (b.getValueFilterItemText = f),
                (b.PivotTableErrorMessage_ShowDetail = "No se puede mostrar u ocultar el detalle para esta selección"),
                (b.PivotTableErrorMessage_MakeChange = "No podemos hacer este cambio para las celdas seleccionadas porque afectará a una PivotTable. Utilice la lista de campos para modificar el informe. Si está intentando insertar o eliminar celdas, mueva la PivotTable e inténtelo de nuevo."),
                (b.PivotTableErrorMessage_ExistData = "Ya hay datos en {}. ¿Desea reemplazarlo?"),
                (b.PivotTableErrorMessage_EditWhenDefer = "El informe PivotTable no puede editarse con la casilla de selección Aplazar la actualización del diseño activada. Para editar el informe, desactive la casilla de selección Aplazar la actualización del diseño en la parte inferior de la lista de campos de PivotTable."),
                (b.PivotTableErrorMessage_DuplicatedFieldName = "El nombre del campo de PivotTable ya existe."),
                (b.PivotTableErrorMessage_EmptyFieldName = "No se puede introducir un valor nulo como elemento o nombre de campo en un informe PivotTable."),
                (b.PivotTableErrorMessage_Protect = "Ese comando no puede ejecutarse mientras una hoja protegida contiene otro informe de PivotTable basado en los mismos datos fuente. Para eliminar la protección de la hoja que tiene el otro informe, haga clic en la pestaña de la hoja y, a continuación, en Desproteger hoja (pestaña Revisar, grupo Cambios). A continuación, vuelva a intentar el comando."),
                (b.PivotTableErrorMessage_EmptySourceFieldName = "El nombre del campo PivotTable no es válido. Para crear un informe PivotTable, debe utilizar datos organizados como una lista con columnas etiquetadas. Si va a cambiar el nombre de un campo de PivotTable, debe escribir un nuevo nombre para el campo."),
                (b.PivotTableErrorMessage_Overlap = "Un informe PivotTable no puede superponerse a otro informe PivotTable."),
                (b.PivotTableErrorMessage_InvalidChange = "No podemos cambiar esta parte de la PivotTable."),
                (b.PivotTableErrorMessage_InvalidGroup = "No se puede agrupar esa selección."),
                (b.PivotTableErrorMessage_InvalidReference = "La referencia no es válida."),
                (b.PivotTableForAccessibility = "PivotTable: nombre \r\nPivotTable: "),
                (b.PivotTableCalcItemHasTowCacheField = 
                    "Si uno o más campos en la tabla dinámica tienen elementos calculados, no se pueden utilizar campos en el área de datos dos o más veces, ni en el área de datos y otra área al mismo tiempo. Si está intentando agregar un campo, elimine los elementos calculados y agregue el campo nuevamente. Si está intentando agregar un elemento calculado, cambie el informe de la tabla dinámica para que no se utilice ningún campo más de una vez y luego agregue el elemento calculado."),
                (b.PivotTableHasSameCalcItemName = "No se pudo crear el elemento o campo calculado porque ya existe otro elemento o campo con el mismo nombre."),
                (b.PivotTableHasNumberOrDateGroup =
                    "Este campo del informe de la tabla dinámica está agrupado. No se puede agregar un elemento calculado a un campo agrupado. Para desagrupar el campo, asegúrese de que esté en el área de filas o columnas, seleccione uno de los elementos del campo agrupado, haga clic en el botón Desagrupar en el grupo Agrupar de la ficha Analizar y, a continuación, inserte el elemento calculado. Una vez insertado, puede volver a agrupar los elementos del campo."),
                (b.PivotTableSubtotalType = "No se admiten promedios, desviaciones estándar y varianzas cuando un informe de la tabla dinámica tiene elementos calculados."),
                (b.PivotTableHasSameItemName = "No se pudo crear el elemento o campo calculado porque ya existe otro elemento o campo con el mismo nombre."),
                (b.PivotTableCalcItemHasMultipleDataField = "No se admiten varios campos de datos del mismo campo cuando un informe de la tabla dinámica tiene elementos calculados."),
                (b.PivotTableMoveCalcItemFieldToReport = "Este campo no se puede colocar en el filtro de informe porque contiene elementos calculados. Para colocar este campo en el filtro de informe, primero elimine los elementos calculados."),
                (b.PivotTableErrorFormula = "No se puede encontrar un nombre de elemento. Compruebe que ha escrito correctamente el nombre y que el elemento está presente en el informe de la tabla dinámica."),
                (b.SlicerNameInFormula = "Filtro"),
                (b.search = "Buscar"),
                (b.AddSearchResult = "Agregar la selección actual al filtro"),
                (b.Layout = "Diseño"),
                (b.showNoData = "Mostrar elementos sin datos"),
                (b.TIMELINE_PLACE_HOLDER = "{TL}"),
                (b.ALL_DATES_IN = "Todas las fechas en "),
                (b.ALL_PERIODS = "Todos los periodos"),
                (b.INVALID_DATE_SELECTION = "Selección de fecha no válida."),
                (b.QUARTER_MAP = ["", b.Q1, b.Q2, b.Q3, b.Q4]),
                (b.DateNotEqual = "No es " + b.TIMELINE_PLACE_HOLDER),
                (b.DateNewerThan = "Después de " + b.TIMELINE_PLACE_HOLDER),
                (b.DateNewerThanOrEqual = "Después o en " + b.TIMELINE_PLACE_HOLDER),
                (b.DateOlderThan = "Antes de " + b.TIMELINE_PLACE_HOLDER),
                (b.DateOlderThanOrEqual = "Antes o en" + b.TIMELINE_PLACE_HOLDER),
                (b.DateNotBetween = "No entre" + b.TIMELINE_PLACE_HOLDER),
                (b.AllDatesIn_Quarter1 = b.ALL_DATES_IN + b.Q1),
                (b.AllDatesIn_Quarter2 = b.ALL_DATES_IN + b.Q2),
                (b.AllDatesIn_Quarter3 = b.ALL_DATES_IN + b.Q3),
                (b.AllDatesIn_Quarter4 = b.ALL_DATES_IN + b.Q4),
                (b.AllDatesIn_January = b.ALL_DATES_IN + b.Jan),
                (b.AllDatesIn_February = b.ALL_DATES_IN + b.Feb),
                (b.AllDatesIn_March = b.ALL_DATES_IN + b.Mar),
                (b.AllDatesIn_April = b.ALL_DATES_IN + b.Apr),
                (b.AllDatesIn_May = b.ALL_DATES_IN + b.May),
                (b.AllDatesIn_June = b.ALL_DATES_IN + b.Jun),
                (b.AllDatesIn_July = b.ALL_DATES_IN + b.Jul),
                (b.AllDatesIn_August = b.ALL_DATES_IN + b.Aug),
                (b.AllDatesIn_September = b.ALL_DATES_IN + b.Sep),
                (b.AllDatesIn_October = b.ALL_DATES_IN + b.Oct),
                (b.AllDatesIn_November = b.ALL_DATES_IN + b.Nov),
                (b.AllDatesIn_December = b.ALL_DATES_IN + b.Dec),
                (b.TIME_LEVEL_YEARS = "AÑOS"),
                (b.TIME_LEVEL_QUARTERS = "TRIMESTRES"),
                (b.TIME_LEVEL_MONTHS = "MESES"),
                (b.TIME_LEVEL_DAYS = "DÍAS"),
                (b.PivotTableErrorMessage_ExistTable ="Un informe de tabla dinámica no puede superponerse a una tabla.");
            },
            "./dist/plugins/print/print.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }), (b.Exp_InvalidSheetIndex = "Índice de hojas inválido.");
            },
            "./dist/plugins/shape/shape.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_InvalidConnectionSite = 'Sitio de conexión inválido.'),
                    (b.Exp_DuplicatedName = "Nombre duplicado."),
                    (b.Exp_EmptyName = "Nombre vacío."),
                    (b.Exp_InvalidRange = 'Rango inválido');
            },
            "./dist/plugins/slicer/slicer.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Blank = "(blank)"),
                    (b.Exp_SlicerNameInvalid = 'El nombre del separador no es válido.'),
                    (b.Exp_SlicerNameExist = 'El nombre del separador ya está en uso; por favor, introduzca un nombre único.'),
                    (b.SlicerNameInFormula = "Slicer");
            },
            "./dist/plugins/statusBar/statusBar.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.cellMode = 'Modo de celda'),
                    (b.cellModeReady = 'Listo'),
                    (b.cellModeEnter = 'Introducir'),
                    (b.cellModeEdit = 'Editar'),
                    (b.formulaAverage = 'Promedio'),
                    (b.formulaCount = 'Conteo'),
                    (b.formulaNumericalCount = 'Conteo numérico'),
                    (b.formulaMin = 'Mín'),
                    (b.formulaMax = 'Máx'),
                    (b.formulaSum = 'Suma'),
                    (b.zoomSlider = 'Zoom porcionado'),
                    (b.zoom = 'Zoom'),
                    (b.toolTipCellMode = 'En {0} modo'),
                    (b.toolTipFormulaAverage = 'Promedio de celdas seleccionadas'),
                    (b.toolTipFormulaCount = 'Número de celdas seleccionadas que contienen datos'),
                    (b.toolTipFormulaNumericalCount = 'Número de celdas seleccionadas que contienen datos numéricos'),
                    (b.toolTipFormulaMin = 'Valor mínimo en la selección'),
                    (b.toolTipFormulaMax = 'Valor máximo en la selección'),
                    (b.toolTipFormulaSum = 'Suma de las celdas seleccionadas'),
                    (b.toolTipZoomOut = 'Alejar'),
                    (b.toolTipZoomIn = 'Ampliar'),
                    (b.toolTipSlider = 'Zoom'),
                    (b.toolTipZoomPanel = 'Nivel de Zoom'),
                    (b.progressItem = "Progreso");
            },
            "./dist/plugins/table/table.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.Exp_DragDropShiftTableCell = 'Esta operación no está permitida. La operación intenta mover las celdas de una tabla en su hoja de trabajo.'),
                    (b.Exp_DragDropChangePartOfTable = 'No puede completar la operación: está intentando cambiar una parte de una línea o columna de la tabla de una manera que no está permitida.'),
                    (b.Exp_TableEmptyNameError = 'El nombre de la tabla no puede estar vacío.'),
                    (b.Exp_TableNameInvalid = 'El nombre de la tabla es inválido.'),
                    (b.Exp_TableInvalidRow = 'Índice de línea o recuento de líneas inválido.'),
                    (b.Exp_TableInvalidColumn = 'Índice de columna o conteo de columnas inválido.'),
                    (b.Exp_TableIntersectError = 'Las tablas no se pueden unir.'),
                    (b.Exp_TableHasSameNameError = 'La hoja de trabajo actual ya existe en una tabla con el mismo nombre.'),
                    (b.Exp_TableRangeHasFilterError = "El rango actual de la tabla contiene un rango de filtro."),
                    (b.Exp_TableDataSourceNullError = 'La fuente de datos de la tabla no puede ser nula.'),
                    (b.Exp_TableMoveOutOfRange = 'La tabla no se puede mover fuera de la hoja.'),
                    (b.Exp_TableResizeOutOfRange = 'El conteo de líneas, columnas y tablas inválidas no puede ser redimensionado fuera de la hoja.'),
                    (b.Exp_ArrayFormulaTable = 'las fórmulas de array de varias celdas no están permitidas en las tablas.'),
                    (b.Exp_TableResizeInvalidRange = 'Los encabezados deben permanecer en la misma línea, y el rango de la tabla resultante debe traslaparse con el rango de la tabla original.'),
                    (b.Exp_TableResizeToSpan = 'Imposible completar la operación: una tabla no puede superponerse a una tabla o a celdas fusionadas.'),
                    (b.Exp_TableResizeWithFilter = 'No puede cambiar las celdas en un rango o tabla filtrada.'),
                    (b.Exp_TableResizeWithHidden = "No se puede cambiar el tamaño de una tabla adyacente a una línea o columna oculta."),
                    (b.Exp_TableResizeToTable = 'No puede completar la operación: no se permiten las operaciones que incluyen celdas tanto dentro como fuera del rango de una tabla, y las operaciones que afectan a las celdas que se superponen a múltiples tablas.'),
                    (b.Exp_RowParamOutOfRange = 'El parámetro de la línea fuera del rango de datos de la tabla.'),
                    (b.Exp_ColParamOutOfRange = 'El param col fuera del rango de datos de la tabla.'),
                    (b.Exp_TableDeleteCountInvalid = 'El parámetro count a eliminar causará que la tabla se quede vacía....'),
                    (b.Exp_TableAddRowIntersectSpan = "Esto no funcionará porque movería las celdas en un intervalo en su hoja de trabajo."),
                    (b.Exp_TableAddRowIntersectTable = "Esto no funcionará porque movería las celdas de una tabla en su hoja de trabajo."),
                    (b.Exp_TableAddRowNoEnoughRoom = 'No puede insertar nuevas celdas porque empujaría las celdas no vacías del final de la hoja de trabajo. Estas celdas podrían parecer vacías pero tienen valores en blanco, algún formato o una fórmula. Elimine suficientes líneas o columnas para hacer espacio para lo que quiere insertar y luego intente de nuevo.'),
                    (b.Table_Total = 'Total'),
                    (b.Table_None = 'Ninguno'),
                    (b.Table_Average = 'Promedio'),
                    (b.Table_Count = 'Conteo'),
                    (b.Table_Count_Numbers = 'Conteo de números'),
                    (b.Table_Max = 'Máx'),
                    (b.Table_Min = 'Mín'),
                    (b.Table_Sum = 'Suma'),
                    (b.Table_StdDev = 'StdDev'),
                    (b.Table_Var = 'Var');
            },
            "./dist/plugins/tableSheet/tableSheet.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                (b.EXP_TooManyPinRecords = "Sólo soporta menos de 10 registros de pines."),
                (b.GroupPanelTip = "Arrastre aquí para establecer los grupos de fila"),
                (b.GroupPanelFieldsHeader = "Campos"),
                (b.GroupPanelGroupsHeader = "Grupos"),
                (b.GroupPanelItemRemove = "Eliminar"),
                (b.GroupPanelItemAddCalculation = "Agregar campo resumen"),
                (b.GroupPanelDropDownCalcField = "Campo"),
                (b.GroupPanelSummaryLabelFormula = "Fórmula"),
                (b.GroupPanelSummaryLabelCaption = "Título"),
                (b.GroupPanelSummaryLabelSlice = "Segmentación"),
                (b.GroupPanelItemRemoveAll = "Eliminar todo"),
                (b.GroupPanelAddCalculateColumn = "Agregar columna de cálculo"),
                (b.StatusBarRowCount = "Número de filas"),
                (b.StatusBarToolTipRowCount = "Número de filas seleccionadas"),
                (b.CrossColumnCrossHeader = "Cruce"),
                (b.CrossColumnDetailFormatter = "Formateador"),
                (b.CrossColumnDetailName = "Nombre"),
                (b.CrossColumnDetailValue = "Valor"),
                (b.CrossColumnDetailValuePlaceHolder = "Arrastre el elemento aquí para establecer el valor"),
                (b.CrossColumnDetailOver = "Encima"),
                (b.CrossColumnDetailCaption = "Título"),
                (b.CrossColumnDetailValueHeader = "Mostrar encabezado de valor cruzado"),
                (b.CrossColumnDetailFilter = "Filtro"),
                (b.CrossColumnDetailAttributes = "Atributos"),
                (b.CrossColumnDetailList = "Lista"),
                (b.Exp_InvalidOperationInProtectForTableSheet = "El rango que está intentando cambiar está bloqueado.")
            },
            "./dist/plugins/touch/touch.res.es.js": function (a, b, c) {
                "use strict";
                Object.defineProperty(b, "__esModule", { value: !0 }),
                    (b.ToolStrip_PasteText = 'Pegar'),
                    (b.ToolStrip_CutText = 'Cortar'),
                    (b.ToolStrip_CopyText = 'Copiar'),
                    (b.ToolStrip_AutoFillText = 'Autocompletar');
            },
            "./node_modules_local/@grapecity/js-calc/dist/gc.spread.calcengine.resources.es.js": function (a, b) {
                var c = "object" == typeof c ? c : {};
                (c.Spread = c.Spread || {}),
                    (c.Spread.CalcEngine = (function (a) {
                        var b = {};
                        function c(d) {
                            if (b[d]) return b[d].exports;
                            var e = (b[d] = { i: d, l: !1, exports: {} });
                            return a[d].call(e.exports, e, e.exports, c), (e.l = !0), e.exports;
                        }
                        return (
                            (c.m = a),
                            (c.c = b),
                            (c.d = function (a, b, d) {
                                c.o(a, b) || Object.defineProperty(a, b, { enumerable: !0, get: d });
                            }),
                            (c.r = function (a) {
                                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
                            }),
                            (c.t = function (a, b) {
                                var d, e;
                                if ((1 & b && (a = c(a)), 8 & b)) return a;
                                if (4 & b && "object" == typeof a && a && a.__esModule) return a;
                                if (((d = Object.create(null)), c.r(d), Object.defineProperty(d, "default", { enumerable: !0, value: a }), 2 & b && "string" != typeof a))
                                    for (e in a)
                                        c.d(
                                            d,
                                            e,
                                            function (b) {
                                                return a[b];
                                            }.bind(null, e)
                                        );
                                return d;
                            }),
                            (c.n = function (a) {
                                var b =
                                    a && a.__esModule
                                        ? function b() {
                                            return a.default;
                                        }
                                        : function b() {
                                            return a;
                                        };
                                return c.d(b, "a", b), b;
                            }),
                            (c.o = function (a, b) {
                                return Object.prototype.hasOwnProperty.call(a, b);
                            }),
                            (c.p = "/assets/"),
                            c((c.s = "./src/resource.es.entry.ts"))
                        );
                    })({
                        "./src/calcEngine.res.es.ts": function (a, b, c) {
                            "use strict";
                            var x,y,zf,zg,zh;
                            Object.defineProperty(b, "__esModule", { value: !0 });
                            function d(a, b) {
                                return { description: a, parameters: b };
                            }
                            function e(a, b) {
                                return { name: a, repeatable: b };
                            }
                            (x = "[posición_inicial]"),
                            (y = "[significance]"),
                            (zf = "[match_mode]"),
                            (zg = "[if_not_found]"),
                            (zh = "[pad_with]"),
                        (b.resource = {
                                Exp_InvalidCast: 'Error de llamada inválido',
                                Exp_FormulaInvalidChar: 'La fórmula contiene un carácter inválido: \'{0}\' en el índice en {1}',
                                Exp_FormulaInvalid: 'Fórmula inválida',
                                Exp_InvalidFunctionName: 'Nombre de función inválido',
                                Exp_InvalidOverrideFunction: 'No puede anular la función integrada.',
                                Exp_InvalidArray: 'Array inválido',
                                Exp_OverrideNotAllowed: 'Intento de sustituir la función mientras que la sustitución no está permitida',
                                Exp_NoSyntax: 'No hay sintaxis \'{0}\' que coincida con la sintaxis\'{1}\'.',
                                Exp_IsValid: '\'{0}\' es inválido.',
                                Exp_InvalidParameters: 'Parámetro de función inválido en {0}.',
                                Exp_InvalidArrayColumns: 'La longitud de las columnas del array no son iguales en {0}.',
                                Exp_ExprIsNull: 'El argumento \'expr\' es nulo',
                                Exp_InvalidOperation: 'Error de operación inválido',
                                Exp_ArgumentNull: 'El argumento es nulo',
                                Exp_CriteriaIsNull: 'El criterio es nulo',
                                Exp_Format: 'Formato',
                                Exp_ArrayFormulaPart: 'No puede cambiar parte de un array.',
                                Exp_NotSupported: 'Excepción no soportada',
                                Fbx_Summary: 'Resumen',
                                Fbx_TableName_Description: 'Nombre de la tabla para ',
                                Fbx_TableSheetName_Description: 'Nombre TableSheet para ',
                                Fbx_CustomName_Description: 'Nombre personalizado para ',
                                Exp_DuplicatedChar: "Caracter duplicado",
                                Exp_ArgumentOutOfRangeException: "Excepción de argumento fuera de rango",
                                Exp_ArgumentException: "Excepción de argumento",
                                _h: {
                                    'ABS': d('Esta función calcula el valor absoluto del valor especificado.', [
                                        e('valor')
                                    ]),
                                    'ACCRINT': d('Esta función calcula los intereses acumulados para un título que paga intereses periódicos.', [
                                        e('emisión'),
                                        e('primer_interés'),
                                        e('liquidación'),
                                        e('tasa'),
                                        e('par'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'ACCRINTM': d('Esta función calcula los intereses devengados al vencimiento de un título que paga intereses periódicos.', [
                                        e('emisión'),
                                        e('plazo'),
                                        e('tasa'),
                                        e('par'),
                                        e('base')
                                    ]),
                                    'ACOS': d('Esta función calcula el arcocoseno, es decir, el ángulo cuyo coseno es el valor especificado.', [
                                        e('número')
                                    ]),
                                    'ACOSH': d('Esta función calcula el coseno hiperbólico inverso del valor especificado.', [
                                        e('número')
                                    ]),
                                    'ADDRESS': d('Esta función utiliza los números de fila y columna para crear una dirección de celda en el texto.', [
                                        e('línea'),
                                        e('columna'),
                                        e('abs_num'),
                                        e('a1style'),
                                        e('sheet_text')
                                    ]),
                                    'AGGREGATE': d('Esta función agrega una lista de números utilizando una función integrada especificada.', [
                                        e("function_num"),
                                        e("options"),
                                        e("ref1"),
                                        e("ref2", true),
                                ]),
                                    'AMORDEGRC': d('Esta función devuelve la depreciación de un período contable, teniendo en cuenta la depreciación prorrateada, y aplica un coeficiente de depreciación en el cálculo basado en la vida de los bienes.', [
                                        e('costo'),
                                        e('fecha_compra'),
                                        e('primer_periodo'),
                                        e('recuperación'),
                                        e('periodo'),
                                        e('drate'),
                                        e('base')
                                    ]),
                                    'AMORLINC': d('Esta función calcula la depreciación de un período contable, teniendo en cuenta la depreciación prorrateada.', [
                                        e('costo'),
                                        e('fecha_compra'),
                                        e('primer_periodo'),
                                        e('recuperación'),
                                        e('periodo'),
                                        e('drate'),
                                        e('base')
                                    ]),
                                    'AND': d('Verificar si todos los argumentos son verdaderos, y devuelve True si todos los argumentos son True.', [
                                        e('lógica1'),
                                        e('lógica2')
                                    ]),
                                    'ASIN': d('Esta función calcula el arcoseno, es decir, el ángulo cuyo seno es el valor especificado.', [
                                        e('valor')
                                    ]),
                                    'ASINH': d('Esta función calcula el seno hiperbólico inverso de un número.', [
                                        e('valor')
                                    ]),
                                    'ATAN': d('Esta función calcula la arctangente, es decir, el ángulo cuya tangente es el valor especificado.', [
                                        e('valor')
                                    ]),
                                    'ATAN2': d('Esta función calcula el arctangente de las coordenadas x- y y especificadas.', [
                                        e('x'),
                                        e('y')
                                    ]),
                                    'ATANH': d('Esta función calcula la tangente hiperbólica inversa de un número.', [
                                        e('valor')
                                    ]),
                                    'AVEDEV': d('Esta función calcula la media de las desviaciones absolutas de los valores especificados de su media.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'AVERAGE': d('Esta función calcula el promedio de los valores numéricos especificados.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'AVERAGEA': d('Esta función calcula el promedio de los valores especificados, incluidos los valores de texto o lógicos, así como los valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'AVERAGEIF': d('Esta función calcula el promedio de los valores numéricos especificados, siempre que cumplan los criterios especificados.', [
                                        e('valor'),
                                        e('criterio'),
                                        e('[rango_promedio]')
                                    ]),
                                    'AVERAGEIFS': d('Esta función calcula el promedio de todas las celdas que cumplen con múltiples criterios especificados.', [
                                        e('rango_promedio'),
                                        e('criterio_rangos',true),
                                        e('criterio1', true)
                                    ]),
                                    'BESSELI': d('Esta función calcula la función de Bessel modificada del primer tipo evaluada para argumentos puramente imaginarios.', [
                                        e('valor'),
                                        e('order')
                                    ]),
                                    'BESSELJ': d('Esta función calcula la función de Bessel de la primera clase.', [
                                        e('valor'),
                                        e('order')
                                    ]),
                                    'BESSELK': d('Esta función calcula la función de Bessel modificada del segundo tipo evaluada para argumentos puramente imaginarios.', [
                                        e('valor'),
                                        e('order')
                                    ]),
                                    'BESSELY': d('Esta función calcula la función de Bessel del segundo tipo.', [
                                        e('valor'),
                                        e('order')
                                    ]),
                                    'BETADIST': d('Esta función calcula la función de distribución beta acumulativa.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('debajo'),
                                        e('arriba')
                                    ]),
                                    'BETAINV': d('Esta función calcula el inverso de la función de distribución beta acumulativa.', [
                                        e('probabilidad'),
                                        e('alpha'),
                                        e('beta'),
                                        e('debajo'),
                                        e('arriba')
                                    ]),
                                    'BIN2DEC': d('Esta función convierte un número binario en un número decimal', [
                                        e('número')
                                    ]),
                                    'BIN2HEX': d('Esta función convierte un número binario en un número hexadecimal.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'BIN2OCT': d('Esta función convierte un número binario en un número octal.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'BINOMDIST': d('Esta función calcula la probabilidad de distribución binomial del término individual.', [
                                        e('number_s'),
                                        e('trials'),
                                        e('probability_s'),
                                        e('acumulado')
                                    ]),
                                    'CEILING': d('Esta función redondea un número hasta el múltiplo más cercano de un valor especificado.', [
                                        e('valor'),
                                        e('significance')
                                    ]),
                                    'CHAR': d('Esta función devuelve el carácter especificado por un número.', [
                                        e('valor')
                                    ]),
                                    'CHIDIST': d('Esta función calcula la probabilidad de una cola de la distribución chi-cuadrado.', [
                                        e('valor'),
                                        e('deg_freedom')
                                    ]),
                                    'CHIINV': d('Esta función calcula el inverso de la probabilidad de una cola de la distribución chi-cuadrado', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'CHITEST': d('Esta función calcula la prueba de independencia de la distribución chi-cuadrado.', [
                                        e('obs_array'),
                                        e('exp_array')
                                    ]),
                                    'CHOOSE': d('Esta función devuelve un valor de una lista de valores.', [
                                        e('index'),
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'CLEAN': d('Esta función elimina todos los caracteres no imprimibles del texto.', [
                                        e('texto')
                                    ]),
                                    'CODE': d('Esta función devuelve un código numérico para representar el primer carácter de una cadena de texto. El código devuelto corresponde al conjunto de caracteres Windows (ANSI).', [
                                        e('texto')
                                    ]),
                                    'COLUMN': d('Esta función devuelve el número de columna de una referencia.', [
                                        e('referencia')
                                    ]),
                                    'COLUMNS': d('Esta función devuelve el número de columnas de un array.', [
                                        e('array')
                                    ]),
                                    'COMBIN': d('Esta función calcula el número de combinaciones posibles para un número determinado de artículos.', [
                                        e('k'),
                                        e('numero_elegido')
                                    ]),
                                    'COMPLEX': d('Esta función convierte los coeficientes reales e imaginarios en un número complejo.', [
                                        e('realcoeff'),
                                        e('imagcoeff'),
                                        e('suffix')
                                    ]),
                                    'CONCATENATE': d('Esta función combina varias cadenas de texto o números en una sola cadena de texto.', [
                                        e('texto1'),
                                        e('texto2', true)
                                    ]),
                                    'CONFIDENCE': d('Esta función devuelve el intervalo de confianza para una media de la población.', [
                                        e('alpha'),
                                        e('standard_dev'),
                                        e('tamaño')
                                    ]),
                                    'CONVERT': d('Esta función convierte un número de un sistema de medición a su equivalente en otro sistema de medición.', [
                                        e('número'),
                                        e('unidad-inicio'),
                                        e('unidad-final')
                                    ]),
                                    'CORREL': d('Esta función devuelve el coeficiente de correlación de los dos conjuntos de datos.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'COS': d('Esta función devuelve el coseno del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'COSH': d('Esta función devuelve el coseno hiperbólico del valor especificado.', [
                                        e('valor')
                                    ]),
                                    'COUNT': d('Esta función devuelve el número de celdas que contienen números.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'COUNTA': d('Esta función devuelve el número de celdas que contienen números, texto o valores lógicos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'COUNTBLANK': d('Esta función devuelve el número de celdas vacías (o en blanco) en un rango de celdas en una hoja.', [
                                        e('rango_celda')
                                    ]),
                                    'COUNTIF': d('Esta función devuelve el número de celdas que cumplen una determinada condición', [
                                        e('rango_celda'),
                                        e('condition')
                                    ]),
                                    'COUNTIFS': d('Esta función devuelve el número de celdas que cumplen múltiples condiciones.', [
                                        e('criteria_rango1', true),
                                        e('criteria1', true)
                                    ]),
                                    'COUPDAYBS': d('Esta función calcula el número de días desde el comienzo del período del cupón hasta la fecha de liquidación.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'COUPDAYS': d('Esta función devuelve el número de días del período de cupón que contiene la fecha de liquidación.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'COUPDAYSNC': d('Esta función calcula el número de días desde la fecha de liquidación hasta la siguiente fecha del cupón.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'COUPNCD': d('Esta función devuelve un número de fecha de la siguiente fecha de cupón después de la fecha de liquidación.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('basis')
                                    ]),
                                    'COUPNUM': d('Esta función devuelve el número de cupones adeudados entre la fecha de liquidación y la fecha de vencimiento.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'COUPPCD': d('Esta función devuelve un número de fecha de la fecha del cupón anterior antes de la fecha de liquidación.', [
                                        e('reglamento'),
                                        e('plazo'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'COVAR': d('Esta función devuelve la covarianza, que es el promedio de los productos de las desviaciones de cada par de puntos de datos en dos conjuntos de números.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'CRITBINOM': d('Esta función devuelve el criterio binomial, el valor más pequeño para el que la distribución binomial acumulativa es mayor o igual que un valor de criterio.', [
                                        e('trials'),
                                        e('probability_s'),
                                        e('alpha')
                                    ]),
                                    'CUMIPMT': d('Esta función devuelve los intereses acumulados pagados por un préstamo entre el período inicial y el final.', [
                                        e('tasa'),
                                        e('nper'),
                                        e('pval'),
                                        e('periodo_inicial'),
                                        e('periodo_final'),
                                        e('paytype')
                                    ]),
                                    'CUMPRINC': d('Esta función devuelve el capital acumulado pagado en un préstamo entre el período de inicio y el final.', [
                                        e('tasa'),
                                        e('nper'),
                                        e('pval'),
                                        e('periodo_inicial'),
                                        e('periodo_final'),
                                        e('paytype')
                                    ]),
                                    'DATE': d('Esta función devuelve el objeto DateTime para una fecha determinada, especificada por el año, el mes y el día.', [
                                        e('año'),
                                        e('mes'),
                                        e('día')
                                    ]),
                                    'DATEDIF': d('Esta función devuelve el número de días, meses o años entre dos fechas.', [
                                        e('fecha_inicio'),
                                        e('fecha_fin'),
                                        e('unit')
                                    ]),
                                    'DATEVALUE': d('Esta función devuelve un objeto DateTime de la fecha especificada.', [
                                        e('date_text')
                                    ]),
                                    'DAVERAGE': d('Esta función calcula el promedio de los valores de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DAY': d('Esta función devuelve el número de día del mes (entero 1 a 31) que corresponde a la fecha especificada.', [
                                        e('date')
                                    ]),
                                    'DAYS360': d('Esta función devuelve el número de días entre dos fechas basadas en un año de 360 días.', [
                                        e('fecha_inicial'),
                                        e('fecha_final'),
                                        e('method')
                                    ]),
                                    'DB': d('Esta función calcula la depreciación de un activo durante un período determinado utilizando el método de saldo decreciente fixed\u2011declining', [
                                        e('costo'),
                                        e('recuperación'),
                                        e('vida'),
                                        e('periodo'),
                                        e('mes')
                                    ]),
                                    'DCOUNT': d('Esta función cuenta las celdas que contienen números en una columna de una lista o base de datos que coinciden con las condiciones especificadas', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DCOUNTA': d('Esta función cuenta las celdas no vacías de una columna de una lista o base de datos que coinciden con las condiciones especificadas', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DDB': d('Esta función calcula la amortización de un activo fijo para un período específico utilizando el método de doble balance decreciente u otro método que usted especifique.', [
                                        e('costo'),
                                        e('recuperación'),
                                        e('vida'),
                                        e('periodo'),
                                        e('factor')
                                    ]),
                                    'DEC2BIN': d('Esta función convierte un número decimal en un número binario.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'DEC2HEX': d('Esta función convierte un número decimal en un número hexadecimal', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'DEC2OCT': d('Esta función convierte un número decimal en un número octal', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'DEGREES': d('Esta función convierte el valor especificado de radianes en grados', [
                                        e('angle')
                                    ]),
                                    'DELTA': d('Esta función identifica si dos valores son iguales. Devuelve 1 si son iguales; devuelve 0 en caso contrario.', [
                                        e('valor1'),
                                        e('valor2')
                                    ]),
                                    'DEVSQ': d('Esta función calcula la suma de los cuadrados de las desviaciones de los puntos de datos (o de un conjunto de puntos de datos) de su media de muestra.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'DGET': d('Esta función extrae un único valor de una columna de una lista o base de datos que coincide con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DISC': d('Esta función calcula la tasa de descuento para un título.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('precio'),
                                        e('valor_de_vencimiento'),
                                        e('base')
                                    ]),
                                    'DMAX': d('Esta función devuelve el mayor número de una columna de una lista o base de datos que coincida con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DMIN': d('Esta función devuelve el número más pequeño de una columna de una lista o base de datos que coincida con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DOLLAR': d('Esta función convierte un número en texto utilizando el formato de moneda, con los decimales redondeados al lugar especificado.', [
                                        e('valor'),
                                        e('decimales')
                                    ]),
                                    'DOLLARDE': d('Esta función convierte un precio de una fracción de dólar en un precio decimal de dólar.', [
                                        e('fractional_dollar'),
                                        e('fraction')
                                    ]),
                                    'DOLLARFR': d('Esta función convierte un número decimal de precio del dólar en un precio de fracción de dólar.', [
                                        e('decimal_dollar'),
                                        e('fraction')
                                    ]),
                                    'DPRODUCT': d('Esta función multiplica los valores de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DSTDEV': d('Esta función estima la desviación estándar de una población basada en una muestra utilizando los números de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DSTDEVP': d('Esta función calcula la desviación estándar de una población basada en toda la población utilizando los números de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DSUM': d('Esta función añade los números en una columna de una lista o base que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DURATION': d('Esta función devuelve la duración de Macaulay para un valor par supuesto de $100.', [
                                        e('reglamento'),
                                        e('madurez'),
                                        e('coupon'),
                                        e('rendimiento'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'DVAR': d('Esta función estima la varianza de una población a partir de una muestra utilizando los números de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'DVARP': d('Esta función calcula la varianza de una población basándose en toda la población utilizando los números de una columna de una lista o base de datos que coinciden con las condiciones especificadas.', [
                                        e('database'),
                                        e('campos'),
                                        e('criterio')
                                    ]),
                                    'EDATE': d('Esta función calcula la fecha que es el número indicado de meses antes o después de una fecha determinada.', [
                                        e('fecha_inicial'),
                                        e('mes')
                                    ]),
                                    'EFFECT': d('Esta función calcula el tipo de interés anual efectivo para un determinado tipo de interés anual nominal y el número de períodos de capitalización por año.', [
                                        e('tasa_nominal'),
                                        e('npery')
                                    ]),
                                    'EOMONTH': d('Esta función calcula la fecha del último día del mes (final del mes) que es el número indicado de meses antes o después de la fecha de inicio.', [
                                        e('fecha_inicial'),
                                        e('mes')
                                    ]),
                                    'ERF': d('Esta función calcula la función de error integrada entre un límite inferior y uno superior.', [
                                        e('limite_inferior'),
                                        e('limite_superior')
                                    ]),
                                    'ERFC': d('Esta función calcula la función de error complementaria integrada entre un límite inferior y el infinito.', [
                                        e('limite_bajo')
                                    ]),
                                    'ERROR.TYPE': d('Esta función devuelve un número correspondiente a uno de los valores de error.', [
                                        e('valor_error')
                                    ]),
                                    'EURO': d('Esta función devuelve el equivalente a un Euro basado en el código de moneda ISO.', [
                                        e('code')
                                    ]),
                                    'EUROCONVERT': d('Esta función convierte la moneda de un miembro Euro (incluyendo Euros) a otra moneda de un miembro Euro (incluyendo los Euros).', [
                                        e('moneda'),
                                        e('fuente'),
                                        e('objetivo'),
                                        e('precisión_max'),
                                        e('triangulación')
                                    ]),
                                    'EVEN': d('Esta función redondea el valor especificado hasta el entero par más cercano.', [
                                        e('valor')
                                    ]),
                                    'EXACT': d('Esta función devuelve verdadero si dos cadenas son iguales; de lo contrario, false.', [
                                        e('texto1'),
                                        e('textp2')
                                    ]),
                                    'EXP': d('Esta función devuelve e elevado a la potencia del valor especificado.', [
                                        e('valor')
                                    ]),
                                    'EXPONDIST': d('Esta función devuelve la distribución exponencial o la densidad de probabilidad.', [
                                        e('valor'),
                                        e('lambda'),
                                        e('cumulative')
                                    ]),
                                    'FACT': d('Esta función calcula el factorial del número especificado.', [
                                        e('número')
                                    ]),
                                    'FACTDOUBLE': d('Esta función calcula el doble factorial del número especificado.', [
                                        e('número')
                                    ]),
                                    'FALSE': d('Esta función devuelve el valor del FALSE lógico.', []),
                                    'FDIST': d('Esta función calcula la distribución de probabilidad F, para ver los grados de diversidad entre dos conjuntos de datos.', [
                                        e('valor'),
                                        e('deg_freedom1'),
                                        e('deg_freedom2')
                                    ]),
                                    'FIND': d('Esta función encuentra un valor de texto dentro de otro y devuelve la posición del valor de texto en el texto buscado.', [
                                        e('texto_buscado'),
                                        e('texto'),
                                        e(x)
                                    ]),
                                    'FINV': d('Esta función devuelve el inverso de la distribución de probabilidad F.', [
                                        e('probabilidad'),
                                        e('deg_freedom1'),
                                        e('deg_freedom2')
                                    ]),
                                    'FISHER': d('Esta función devuelve la transformación de Fisher para un valor especificado.', [
                                        e('valor')
                                    ]),
                                    'FISHERINV': d('Esta función devuelve el inverso de la transformación de Fisher para un valor especificado.', [
                                        e('valor')
                                    ]),
                                    'FIXED': d('Esta función redondea un número al número de decimales especificado, da formato al número en formato decimal utilizando un punto y comas (si así se especifica) y devuelve el resultado como texto.', [
                                        e('num'),
                                        e('digits'),
                                        e('no_commas')
                                    ]),
                                    'FLOOR': d('Esta función redondea un número al múltiplo más cercano de un valor especificado.', [
                                        e('valor'),
                                        e('importancia')
                                    ]),
                                    'FORECAST': d('Esta función calcula un valor futuro utilizando los valores existentes.', [
                                        e('valor'),
                                        e('Yarray'),
                                        e('Xarray')
                                    ]),
                                    'FREQUENCY': d('Esta función calcula la frecuencia con la que se producen los valores dentro de un rango de valores. Esta función devuelve un array vertical de números.', [
                                        e('array_datos'),
                                        e('bins_array')
                                    ]),
                                    'FTEST': d('Esta función devuelve el resultado de una prueba F, que devuelve la probabilidad de una cola de que las variaciones en dos arrays no sean significativamente diferentes.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'FV': d('Esta función devuelve el valor futuro de una inversión sobre la base de un valor actual, pagos periódicos y un tipo de interés especificado.', [
                                        e('tasa'),
                                        e('numper'),
                                        e('paymt'),
                                        e('pval'),
                                        e('type')
                                    ]),
                                    'FVSCHEDULE': d('Esta función devuelve el valor futuro de un capital inicial después de aplicar una serie de tipos de interés compuestos. Calcula el valor futuro de una inversión con un tipo variable o ajustable.', [
                                        e('principal'),
                                        e('calendario')
                                    ]),
                                    'GAMMADIST': d('Esta función devuelve la distribución gamma.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('cumulative')
                                    ]),
                                    'GAMMAINV': d('Esta función devuelve el inverso de la distribución acumulativa gamma.', [
                                        e('probabilidad'),
                                        e('alpha'),
                                        e('beta')
                                    ]),
                                    'GAMMALN': d('Esta función devuelve el logaritmo natural de la función Gamma, G(x).', [
                                        e('valor')
                                    ]),
                                    'GCD': d('Esta función devuelve el mayor divisor común de dos números.', [
                                        e('número1'),
                                        e('número2')
                                    ]),
                                    'GEOMEAN': d('Esta función devuelve la media geométrica de un conjunto de datos positivos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'GESTEP': d('Esta función, mayor o igual a paso, devuelve una indicación de si un número es igual a un umbral.', [
                                        e('número'),
                                        e('step')
                                    ]),
                                    'GROWTH': d('Esta función calcula el crecimiento exponencial previsto. Esta función devuelve los valores y de una serie de nuevos valores x que se especifican utilizando los valores x y y existentes.', [
                                        e('y'),
                                        e('x'),
                                        e('newx'),
                                        e('constante')
                                    ]),
                                    'HARMEAN': d('Esta función devuelve la media armónica de un conjunto de datos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'HEX2BIN': d('Esta función convierte un número hexadecimal en un número binario.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'HEX2DEC': d('Esta función convierte un número hexadecimal en un número decimal.', [
                                        e('número')
                                    ]),
                                    'HEX2OCT': d('Esta función convierte un número hexadecimal en un número octal.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'HLOOKUP': d('Esta función busca un valor en la fila superior y luego devuelve un valor en la misma columna de una fila especificada.', [
                                        e('lookup_value'),
                                        e('table_array'),
                                        e('row_index_num'),
                                        e('range_lookup')
                                    ]),
                                    'HOUR': d('Esta función devuelve la hora que corresponde a un tiempo especificado.', [
                                        e('time')
                                    ]),
                                    'HYPGEOMDIST': d('Esta función devuelve la distribución hipergeométrica.', [
                                        e('sample_s'),
                                        e('number_sample'),
                                        e('population_s'),
                                        e('number_pop')
                                    ]),
                                    'IF': d('Esta función realiza una comparación y devuelve uno de los dos valores proporcionados en base a esa comparación.', [
                                        e('test_lógico'),
                                        e('valor_si_true'),
                                        e('valor_si_false')
                                    ]),
                                    'IFERROR': d('Esta función evalúa una fórmula y devuelve un valor que usted suministra si hay un error o el resultado de la fórmula.', [
                                        e('valor'),
                                        e('valor_si_error')
                                    ]),
                                    'IMABS': d('Esta función devuelve el valor absoluto o módulo de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMAGINARY': d('Esta función devuelve el coeficiente imaginario de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMARGUMENT': d('Esta función devuelve el argumento theta, que es un ángulo expresado en radianes.', [
                                        e('número_complejo')
                                    ]),
                                    'IMCONJUGATE': d('Esta función devuelve el conjugado complejo de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMCOS': d('Esta función devuelve el coseno de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMDIV': d('Esta función devuelve el cociente de dos números complejos.', [
                                        e('número_complejo'),
                                        e('complexdenom')
                                    ]),
                                    'IMEXP': d('Esta función devuelve el exponencial de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMLN': d('Esta función devuelve el logaritmo natural de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMLOG2': d('Esta función devuelve el logaritmo base-2 de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMLOG10': d('Esta función devuelve el logaritmo común de un número complejo.', [
                                        e('número_complejo')
                                    ]),
                                    'IMPOWER': d('Esta función devuelve un número complejo elevado a una potencia.', [
                                        e('número_complejo'),
                                        e('powernum')
                                    ]),
                                    'IMPRODUCT': d('Esta función devuelve el producto de hasta 29 números complejos en el formato de texto x+yi o x+yj.', [
                                        e('número_complejo1'),
                                        e('número_complejo2', true)
                                    ]),
                                    'IMREAL': d('Esta función devuelve el coeficiente real de un número complejo en el formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                        ]),
                                        'IMSIN': d('Esta función devuelve el seno de un número complejo en el formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                        ]),
                                        'IMSQRT': d('Esta función devuelve la raíz cuadrada de un número complejo en el formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                        ]),
                                        'IMSUB': d('Esta función devuelve la diferencia de dos números complejos en el formato de texto x+yi o x+yj.', [
                                        e('complexnum1'),
                                        e('complexnum2')
                                        ]),
                                        'IMSUM': d('Esta función devuelve la suma de dos o más números complejos en el formato de texto x+yi o x+yj.', [
                                        e('complexnum1'),
                                        e('complexnum2', true)
                                        ]),
                                        'INDEX': d('Esta función devuelve un valor o la referencia a un valor desde un array o rango.', [
                                        e('array'),
                                        e('num_línea'),
                                        e('num_columna'),
                                        e('num_área')
                                    ]),
                                    'INDIRECT': d('Esta función devuelve la referencia especificada por una cadena de texto. Las referencias son evaluadas inmediatamente para mostrar su contenido.', [
                                        e('ref_texto'),
                                        e('[a1_style]')
                                    ]),
                                    'INT': d('Esta función redondea un número específico hasta el entero más cercano.', [
                                        e('valor')
                                    ]),
                                    'INTERCEPT': d('Esta función devuelve las coordenadas de un punto en el que una línea interseca el eje y, utilizando valores x e y existentes.', [
                                        e('dependiente'),
                                        e('independiente')
                                    ]),
                                    'INTRATE': d('Esta función calcula el tipo de interés para un valor totalmente invertido.', [
                                        e('liquidación'),
                                        e('maturez'),
                                        e('inversión'),
                                        e('valor_redención'),
                                        e('base')
                                    ]),
                                    'IPMT': d('Esta función calcula el pago de los intereses de un préstamo.', [
                                        e('tasa'),
                                        e('per'),
                                        e('nper'),
                                        e('pval'),
                                        e('fval'),
                                        e('type')
                                    ]),
                                    'IRR': d('Esta función devuelve la tasa interna de retorno para una serie de flujos de efectivo representados por los números de un array.', [
                                        e('arrayvals'),
                                        e('estimación')
                                    ]),
                                    'ISBLANK': d('Esta función comprueba si un valor, una expresión o el contenido de una celda de referencia está vacío.', [
                                        e('ref_celda')
                                    ]),
                                    'ISERR': d('Esta función, Is Error Other Than Not Available, prueba si un valor, una expresión o el contenido de una celda referenciada tiene un error distinto de no disponible (#N/A).', [
                                        e('ref_celda')
                                    ]),
                                    'ISERROR': d('Esta función, Is Error of Any Kind,  prueba si un valor, una expresión o el contenido de una celda referenciada tiene un error de cualquier tipo.', [
                                        e('ref_celda')
                                    ]),
                                    'ISEVEN': d('Esta función, Is Number Even, prueba si un valor, una expresión o el contenido de una celda de referencia es par.', [
                                        e('ref_celda')
                                    ]),
                                    'ISLOGICAL': d('Esta función comprueba si un valor, una expresión o el contenido de una celda referenciada es un valor lógico (booleano).', [
                                        e('ref_celda')
                                    ]),
                                    'ISNA': d('Esta función, Is Not Available, prueba si un valor, una expresión o el contenido de una celda referenciada tiene el valor de error no disponible (#N/A).', [
                                        e('ref_celda')
                                    ]),
                                    'ISNONTEXT': d('Esta función prueba si un valor, una expresión o el contenido de una celda referenciada tiene algún tipo de dato que no sea texto.', [
                                        e('ref_celda')
                                    ]),
                                    'ISNUMBER': d('Esta función prueba si un valor, una expresión o el contenido de una celda referenciada tiene datos numéricos.', [
                                        e('ref_celda')
                                    ]),
                                    'ISODD': d('Esta función, Is Number Odd, prueba si un valor, una expresión o el contenido de una celda referenciada tiene datos numéricos.', [
                                        e('ref_celda')
                                    ]),
                                    'ISPMT': d('Esta función calcula los intereses pagados durante un período determinado de una inversión.', [
                                        e('tasa'),
                                        e('per'),
                                        e('nper'),
                                        e('pv')
                                    ]),
                                    'ISREF': d('Esta función, Is Reference, prueba si un valor, una expresión o el contenido de una celda referenciada es una referencia a otra celda.', [
                                        e('ref_celda')
                                    ]),
                                    'ISTEXT': d('Esta función prueba si un valor, una expresión o el contenido de una celda referenciada tiene datos de texto.', [
                                        e('ref_celda')
                                    ]),
                                    'KURT': d('Esta función devuelve la curtosis de un conjunto de datos.', [
                                        e('valor1'),
                                        e('valor2'),
                                        e('valor3'),
                                        e('valor4', true)
                                    ]),
                                    'LARGE': d('Esta función devuelve el n-ésimo valor más grande de un conjunto de datos, donde se especifica n.', [
                                        e('array'),
                                        e('n')
                                    ]),
                                    'LCM': d('Esta función devuelve el múltiplo menos común de dos números.', [
                                        e('número1'),
                                        e('número2')
                                    ]),
                                    'LEFT': d('Esta función devuelve los caracteres más a la izquierda especificados de un valor de texto, y basado en el número de caracteres que especifique.', [
                                        e('texto'),
                                        e('num_caracteres')
                                    ]),
                                    'LEN': d('Esta función devuelve la longitud del número de caracteres de una cadena de texto.', [
                                        e('texto')
                                    ]),
                                    'LINEST': d('Esta función calcula las estadísticas de una línea.', [
                                        e('y'),
                                        e('x'),
                                        e('constante'),
                                        e('estadísticas')
                                    ]),
                                    'LN': d('Esta función devuelve el logaritmo natural del número especificado.', [
                                        e('valor')
                                    ]),
                                    'LOG': d('Esta función devuelve la base logarítmica Y de un número X.', [
                                        e('número'),
                                        e('base')
                                    ]),
                                    'LOG10': d('Esta función devuelve el logaritmo base 10 del número dado.', [
                                        e('valor')
                                    ]),
                                    'LOGEST': d('Esta función calcula una curva exponencial que se ajusta a los datos y devuelve una matriz de valores que describe la curva.', [
                                        e('y'),
                                        e('x'),
                                        e('constante'),
                                        e('estadísticas')
                                    ]),
                                    'LOGINV': d('Esta función devuelve el inverso de la función de distribución acumulativa logarítmica de x, donde LN(x) se distribuye normalmente con la media y la desviación estándar especificadas.', [
                                        e('probabilidad'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'LOGNORMDIST': d('Esta función devuelve el inverso de la función de distribución acumulativa logarítmica normal de x, donde LN(x) se distribuye normalmente con la media y la desviación estándar especificadas. Analizar los datos que han sido transformados logarítmicamente con esta función.', [
                                        e('x'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'LOOKUP': d('Esta función busca un valor y devuelve un valor de la misma ubicación en una segunda área.', [
                                        e('valor_buscado'),
                                        e('vector_buscado'),
                                        e('resultado')
                                    ]),
                                    'LOWER': d('Esta función convierte el texto en letras minúsculas.', [
                                        e('texto')
                                    ]),
                                    'MATCH': d('Esta función devuelve la posición relativa de un elemento especificado en un rango.', [
                                        e('lookup_value'),
                                        e('lookup_array'),
                                        e('match_type')
                                    ]),
                                    'XMATCH': d('Esta función devuelve la posición relativa de un elemento en un array. Por defecto, se requiere una coincidencia exacta.',
                                        [e("lookup_value"), e("lookup_array"), e("[match_mode]"), e("[search_mode]")]
                                    ),
                                    'XLOOKUP': d(
                                        'Esta función busca una coincidencia en un rango o en un array y devuelve el elemento correspondiente de un segundo rango o array. Por defecto, se utiliza una coincidencia exacta.',
                                        [e("lookup_value"), e("lookup_array"), e("return_array"), e("[if_not_found]"), e("[match_mode]"), e("[search_mode]")]
                                    ),
                                    'MAX': d('Esta función devuelve el valor máximo, el mayor valor, de todos los valores en los argumentos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MAXA': d('Esta función devuelve el mayor valor de una lista de argumentos, incluyendo texto y valores lógicos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MDETERM': d('Esta función devuelve la matriz determinante de un array.', [
                                        e('array')
                                    ]),
                                    'MDURATION': d('Esta función calcula la duración modificada de Macaulay de una título con un valor nominal supuesto de $100.', [
                                        e('reglamento'),
                                        e('madurez'),
                                        e('coupon'),
                                        e('rendimiento'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'MEDIAN': d('Esta función devuelve la mediana, el número que se encuentra en el centro del conjunto de números proporcionados; es decir, la mitad de los números tienen valores mayores que la mediana, y la mitad tienen valores menores que la mediana.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MID': d('Esta función devuelve el número de caracteres solicitado de una cadena de texto que comienza en la posición que se especifica y se basa en el número de caracteres que se especifican.', [
                                        e('texto'),
                                        e('posición_inicial'),
                                        e('num_caracteres')
                                    ]),
                                    'MIN': d('Esta función devuelve el valor mínimo, el menor valor, de todos los valores en los argumentos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MINA': d('Esta función devuelve el valor mínimo de una lista de argumentos, incluidos los valores de texto y lógicos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MINUTE': d('Esta función devuelve el minuto correspondiente a un tiempo especificado.', [
                                        e('tiempos')
                                    ]),
                                    'MINVERSE': d('Esta función devuelve la matriz inversa para la matriz almacenada en un array.', [
                                        e('array')
                                    ]),
                                    'MIRR': d('Esta función devuelve la tasa interna de rendimiento modificada para una serie de flujos de efectivo periódicos.', [
                                        e('valores'),
                                        e('finance_rate'),
                                        e('reinvest_rate')
                                    ]),
                                    'MMULT': d('Esta función devuelve el producto de la matriz para dos arrays.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'MOD': d('Esta función devuelve el resto de una operación de división.', [
                                        e('dividendo'),
                                        e('divisor')
                                    ]),
                                    'MODE': d('Esta función devuelve el valor más frecuente de un conjunto de datos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MONTH': d('Esta función devuelve el mes correspondiente al valor de la fecha especificada.', [
                                        e('date')
                                    ]),
                                    'MROUND': d('Esta función devuelve un número redondeado al múltiplo deseado.', [
                                        e('número'),
                                        e('multiple')
                                    ]),
                                    'MULTINOMIAL': d('Esta función calcula la relación del factorial de una suma de valores con el producto de los factoriales.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'MUNIT': d('La función devuelve la matriz de unidades para la dimensión especificada.', [
                                        e('dimension'),
                                    ]),
                                    'N': d('Esta función devuelve un valor convertido en un número.', [
                                        e('valor')
                                    ]),
                                    'NA': d('Esta función devuelve el valor de error #N/A que significa no disponible.', []),
                                    'SHEET': d('Devuelve el número de hoja de la hoja de referencia.', [
                                        e('[valor]'),
                                    ]),
                                    'SHEETS': d('Devuelve el número de hoja de hojas en una referencia.', [
                                        e('[referencia]')
                                    ]),
                                    'NEGBINOMDIST': d('Esta función devuelve la distribución binomial negativa.', [
                                        e('number_f'),
                                        e('number_s'),
                                        e('probability_s')
                                    ]),
                                    'NETWORKDAYS': d('Esta función devuelve el número total de días laborables completos entre las fechas de inicio y fin.', [
                                        e('fecha_inicial'),
                                        e('fecha_final'),
                                        e('vacaciones')
                                    ]),
                                    'NOMINAL': d('Esta función devuelve el tipo de interés nominal anual para una tasa efectiva determinada y el número de períodos de capitalización por año..', [
                                        e('tasa_efectiva'),
                                        e('npery')
                                    ]),
                                    'NORMDIST': d('Esta función devuelve la distribución acumulativa normal para la media y la desviación estándar especificadas.', [
                                        e('x'),
                                        e('media'),
                                        e('standard_dev'),
                                        e('cumulative')
                                    ]),
                                    'NORMINV': d('Esta función devuelve el inverso de la distribución acumulativa normal para la media y la desviación estándar dadas.', [
                                        e('probabilidad'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'NORMSDIST': d('Esta función devuelve la función de distribución acumulativa normal estándar.', [
                                        e('valor')
                                    ]),
                                    'NORMSINV': d('Esta función devuelve el inverso de la distribución acumulativa normal estándar. La distribución tiene una media de cero y una desviación estándar de uno.', [
                                        e('probabilidad')
                                    ]),
                                    'NOT': d('Esta función invierte el valor lógico de su argumento.', [
                                        e('valor_lógico')
                                    ]),
                                    'NOW': d('Esta función devuelve la fecha y la hora actuales.', []),
                                    'NPER': d('Esta función devuelve el número de períodos para una inversión basada en un valor presente, un valor futuro, pagos periódicos y un tipo de interés especificado.', [
                                        e('tasa'),
                                        e('paymt'),
                                        e('pval'),
                                        e('fval'),
                                        e('type')
                                    ]),
                                    'NPV': d('Esta función calcula el valor actual neto de una inversión utilizando una tasa de descuento y una serie de pagos e ingresos futuros.', [
                                        e('tasa'),
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'OBJECT': d("Esta función convierte la secuencia propiedad/expresión en un objeto.", [
                                        e("propiedad",true),
                                        e("expresión",true)
                                    ]),
                                    'OCT2BIN': d('Esta función convierte un número octal en un número binario.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'OCT2DEC': d('Esta función convierte un número octal en un número decimal.', [
                                        e('número')
                                    ]),
                                    'OCT2HEX': d('Esta función convierte un número octal en un número hexadecimal.', [
                                        e('número'),
                                        e('places')
                                    ]),
                                    'ODD': d('Esta función redondea el valor especificado hasta el entero impar más cercano.', [
                                        e('valor')
                                    ]),
                                    'ODDFPRICE': d('Esta función calcula el precio por cada 100 dólares de valor nominal de un valor con un primer período impar.', [
                                        e('liquidacion'),
                                        e('madurez'),
                                        e('emisión'),
                                        e('primer_cupón'),
                                        e('tasa'),
                                        e('rendimiento'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'ODDFYIELD': d('Esta función calcula el rendimiento de un valor con un primer período impar.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('emisión'),
                                        e('primer_cupón'),
                                        e('tasa'),
                                        e('precio'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'ODDLPRICE': d('Esta función calcula el precio por cada 100 dólares de valor nominal de un valor con un último período de cupón impar.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('last'),
                                        e('tasa'),
                                        e('rendimiento'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'ODDLYIELD': d('Esta función calcula el rendimiento de un valor con un último período impar.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('last'),
                                        e('tasa'),
                                        e('precio'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'OFFSET': d('Esta función devuelve una referencia a un rango. El rango es un número especificado de filas y columnas de una celda o rango de celdas. La función devuelve una única celda o un rango de celdas.', [
                                        e('referencia'),
                                        e('líneas'),
                                        e('columnas'),
                                        e('alto'),
                                        e('ancho')
                                    ]),
                                    'OR': d('Esta función calcula el OR lógico. Devuelve TRUE si alguno de sus argumentos es verdadero; de lo contrario, devuelve FALSE si todos los argumentos son falsos.', [
                                        e('logical1'),
                                        e('logical2', true)
                                    ]),
                                    'PEARSON': d('Esta función devuelve el coeficiente de correlación del momento del producto de Pearson, un índice adimensional entre -1,0 y 1,0 inclusive, indicativo de la relación lineal de dos conjuntos de datos.', [
                                        e('array_ind'),
                                        e('array_dep')
                                    ]),
                                    'PERCENTILE': d('Esta función devuelve el percentil n de valores en un rango.', [
                                        e('array'),
                                        e('n')
                                    ]),
                                    'PERCENTRANK': d('Esta función devuelve el rango de un valor en un conjunto de datos como un porcentaje del conjunto de datos.', [
                                        e('array'),
                                        e('n'),
                                        e('importancia')
                                    ]),
                                    'PERMUT': d('Esta función devuelve el número de permutaciones posibles para un número determinado de elementos.', [
                                        e('número'),
                                        e('number_chosen')
                                    ]),
                                    'PI': d('Esta función devuelve PI como 3.1415926536.', []),
                                    'PMT': d('Esta función devuelve la cantidad de pago de un préstamo dado el valor actual, el tipo de interés especificado y el número de plazos.', [
                                        e('tasa'),
                                        e('nper'),
                                        e('pval'),
                                        e('fval'),
                                        e('type')
                                    ]),
                                    'POISSON': d('Esta función devuelve la distribución de Poisson.', [
                                        e('nevents'),
                                        e('media'),
                                        e('cumulative')
                                    ]),
                                    'POWER': d('Esta función eleva el número especificado a la potencia especificada.', [
                                        e('número'),
                                        e('power')
                                    ]),
                                    'PPMT': d('Esta función devuelve el importe del pago del principal de un préstamo dado el valor actual, el tipo de interés especificado y el número de plazos.', [
                                        e('tasa'),
                                        e('per'),
                                        e('nper'),
                                        e('pval'),
                                        e('fval'),
                                        e('type')
                                    ]),
                                    'PRICE': d('Esta función calcula el precio por cada 100 dólares del valor nominal de un título de interés periódico', [
                                        e('reglamento'),
                                        e('madurez'),
                                        e('tasa'),
                                        e('rendimiento'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'PRICEDISC': d('Esta función devuelve el precio por cada 100 dólares del valor nominal de un título con descuento.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('descuento'),
                                        e('valor_redención'),
                                        e('base')
                                    ]),
                                    'PRICEMAT': d('Esta función devuelve el precio al vencimiento por cada $100 del valor nominal de un título que paga intereses.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('emisión'),
                                        e('tasa'),
                                        e('rendimiento'),
                                        e('base')
                                    ]),
                                    'PROB': d('Esta función devuelve la probabilidad de que los valores en un rango estén entre dos límites.', [
                                        e('rango_x'),
                                        e('rango_probabilidad'),
                                        e('límite_inferior'),
                                        e('límite_superior')
                                    ]),
                                    'PRODUCT': d('Esta función multiplica todos los argumentos y devuelve el producto.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'PROPER': d('Esta función pone en mayúsculas la primera letra de cada palabra de una cadena de texto.', [
                                        e('texto')
                                    ]),
                                    'PROPERTY': d("Esta función devuelve el valor de la ruta propiedad en el objeto.", [
                                        e("data_expression"), 
                                        e("ruta_propiedad")
                                    ]),
                                    'PV': d('Esta función devuelve el valor actual de una inversión basándose en el tipo de interés, el número y el importe de los pagos periódicos y el valor futuro. El valor actual es la cantidad total que vale una serie de pagos futuros ahora.', [
                                        e('tasa'),
                                        e('numper'),
                                        e('pago'),
                                        e('fval'),
                                        e('type')
                                    ]),
                                    'QUARTILE': d('Esta función devuelve qué cuartil (qué trimestre o 25 por ciento) de un conjunto de datos es un valor.', [
                                        e('array'),
                                        e('quart')
                                    ]),
                                    'QUOTIENT': d('Esta función devuelve la parte entera de una división. Usa esto para ignorar el resto de una división.', [
                                        e('numerador'),
                                        e('denominador')
                                    ]),
                                    'RADIANS': d('Esta función convierte el número especificado de grados a radianes.', [
                                        e('valor')
                                    ]),
                                    'RAND': d('Esta función devuelve un número aleatorio distribuido uniformemente entre 0 y 1.', []),
                                    'RANDBETWEEN': d('Esta función devuelve un número aleatorio entre los números que se especifican.', [
                                        e('límite_inferior'),
                                        e('límite_superior')
                                    ]),
                                    'RANGEBLOCKSPARKLINE': d("Esta función devuelve una plantilla rango.", [
                                        e("template_range"), 
                                        e("data_expression")
                                    ]),
                                    'RANK': d('Esta función devuelve el rango de un número en un conjunto de números. Si tuviera que ordenar el conjunto, el rango del número sería su posición en la lista.', [
                                        e('número'),
                                        e('ref'),
                                        e('orden')
                                    ]),
                                    'RATE': d('Esta función devuelve el tipo de interés por período de una anualidad.', [
                                        e('nper'),
                                        e('pmt'),
                                        e('pval'),
                                        e('fval'),
                                        e('type'),
                                        e('estimación')
                                    ]),
                                    'RECEIVED': d('Esta función devuelve la cantidad recibida a su vencimiento por un valor totalmente invertido.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('investment'),
                                        e('descuento'),
                                        e('base')
                                    ]),
                                    'REPLACE': d('Esta función reemplaza parte de una cadena de texto con una cadena de texto diferente, basada en el número de caracteres que especifique.', [
                                        e('texto_anterior'),
                                        e('posición_inicial'),
                                        e('num_caracteres'),
                                        e('nuevo_texto')
                                    ]),
                                    'REPT': d('Esta función repite el texto un número determinado de veces.', [
                                        e('texto'),
                                        e('número_veces')
                                    ]),
                                    'RIGHT': d('Esta función devuelve los caracteres más a la derecha especificados de un valor de texto, y basado en el número de caracteres que especifique.', [
                                        e('texto'),
                                        e('num_caracteres')
                                    ]),
                                    'ROMAN': d('Esta función convierte un número arábigo en un equivalente textual de un número romano.', [
                                        e('número'),
                                        e('forma')
                                    ]),
                                    'ROUND': d('Esta función redondea el valor especificado al número más cercano, utilizando el número especificado de decimales.', [
                                        e('número'),
                                        e('num_digits')
                                    ]),
                                    'ROUNDDOWN': d('Esta función redondea el número especificado para abajo hasta el número más cercano, usando el número especificado de decimales.', [
                                        e('número'),
                                        e('num_digits')
                                    ]),
                                    'ROUNDUP': d('Esta función redondea el número especificado hasta el número más cercano, utilizando el número especificado de decimales.', [
                                        e('número'),
                                        e('num_digits')
                                    ]),
                                    'ROW': d('Esta función devuelve el número de una línea de una referencia.', [
                                        e('referencia')
                                    ]),
                                    'ROWS': d('Esta función devuelve el número de líneas de un array.', [
                                        e('array')
                                    ]),
                                    'RSQ': d('Esta función devuelve el cuadrado del coeficiente de correlación de momento del producto de Pearson (R-cuadrado) a través de puntos de datos en y\'s y x\'s conocidos.', [
                                        e('array_dep'),
                                        e('array_ind')
                                    ]),
                                    'SEARCH': d('Esta función encuentra una cadena de texto en otra cadena de texto y devuelve el índice de la posición inicial del texto encontrado.', [
                                        e('texto_buscado'),
                                        e('en_texto'),
                                        e(x)
                                    ]),
                                    'SECOND': d('Esta función devuelve el valor de los segundos (0 a 59) durante un tiempo determinado.', [
                                        e('time')
                                    ]),
                                    'SERIESSUM': d('Esta función devuelve la suma de una serie de potencia.', [
                                        e('x'),
                                        e('n'),
                                        e('m'),
                                        e('coefficients')
                                    ]),
                                    'SIGN': d('Esta función devuelve el signo de un número o expresión.', [
                                        e('ref_celda')
                                    ]),
                                    'SIN': d('Esta función devuelve el seno del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'SINH': d('Esta función devuelve el seno hiperbólico del número especificado.', [
                                        e('valor')
                                    ]),
                                    'SKEW': d('Esta función devuelve la asimetría de una distribución.', [
                                        e('number1'),
                                        e('number2', true)
                                    ]),
                                       'SLN': d('Esta función devuelve la depreciación lineal de un activo durante un período.', [
                                        e('costo'),
                                        e('recuperación'),
                                        e('vida')
                                    ]),
                                    'SLOPE': d('Esta función calcula la pendiente de una regresión lineal.', [
                                        e('array_dep'),
                                        e('array_ind')
                                    ]),
                                    'SMALL': d('Esta función devuelve el n-ésimo valor más pequeño de un conjunto de datos, donde se especifica n.', [
                                        e('array'),
                                        e('n')
                                    ]),
                                    'SQRT': d('Esta función devuelve la raíz cuadrada positiva del número especificado.', [
                                        e('valor')
                                    ]),
                                    'SQRTPI': d('Esta función devuelve la raíz cuadrada positiva de un múltiplo de pi (p).', [
                                        e('multiple')
                                    ]),
                                    'STANDARDIZE': d('Esta función devuelve un valor normalizado a partir de una distribución caracterizada por la media y la desviación estándar.', [
                                        e('x'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'STDEVA': d('Esta función devuelve la desviación estándar para un conjunto de números, texto o valores lógicos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'STDEVP': d('Esta función devuelve la desviación estándar para toda una población especificada (de valores numéricos).', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'STDEVPA': d('Esta función devuelve la desviación estándar para toda una población especificada, incluyendo valores de texto o lógicos, así como valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'STEYX': d('Esta función devuelve el error estándar del valor predicho de y para cada x. El error estándar es una medida de la cantidad de error en la predicción de y para un valor de x.', [
                                        e('array_dep'),
                                        e('array_ind')
                                    ]),
                                    'SUBSTITUTE': d('Esta función sustituye una nueva cadena de caracteres específicos en una cadena existente.', [
                                        e('texto'),
                                        e('texto_antiguo'),
                                        e('nuevo_text'),
                                        e('instancia_num')
                                    ]),
                                    'SUBTOTAL': d('Esta función calcula un subtotal de una lista de números utilizando una función incorporada especificada.', [
                                        e('función_num'),
                                        e('ref1'),
                                        e('ref2', true)
                                    ]),
                                    'SUM': d('Esta función devuelve la suma de celdas o rango de celdas.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'SUMIF': d('Esta función añade las celdas utilizando un criterio determinado.', [
                                        e('rango'),
                                        e('criterio'),
                                        e('sum_range')
                                    ]),
     				                'SUMIFS': d('Esta función añade las celdas en un rango utilizando múltiples criterios.', [
                                        e('sum_rango'),
                                        e('criterio_rango1',true),
                                        e('criterio1', true)
                                    ]),
                                    'SUMPRODUCT': d('Esta función devuelve la suma de los productos de las celdas. Multiplica los componentes correspondientes en los arrays dados, y devuelve la suma de esos productos.', [
                                        e('array1'),
                                        e('array2', true)
                                    ]),
                                    'SUMSQ': d('Esta función devuelve la suma de los cuadrados de los argumentos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'SUMX2MY2': d('Esta función devuelve la suma de la diferencia de los cuadrados de los valores correspondientes en dos arrays.', [
                                        e('array_x'),
                                        e('array_y')
                                    ]),
                                    'SUMX2PY2': d('Esta función devuelve la suma de la suma de los cuadrados de los valores correspondientes en dos arrays.', [
                                        e('array_x'),
                                        e('array_y')
                                    ]),
                                    'SUMXMY2': d('Esta función devuelve la suma del cuadrado de las diferencias de los valores correspondientes en dos arrays.', [
                                        e('array_x'),
                                        e('array_y')
                                    ]),
                                    'SYD': d('Esta función devuelve la suma de años de la depreciación de un activo durante un período determinado.', [
                                        e('costo'),
                                        e('recuperación'),
                                        e('vida'),
                                        e('periodo')
                                    ]),
                                    'T': d('Esta función devuelve la suma de dígitos de la depreciación de un activo durante un período determinado.', [
                                        e('valor')
                                    ]),
                                    'TAN': d('Esta función devuelve la tangente del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'TANH': d('Esta función devuelve la tangente hiperbólica del número especificado.', [
                                        e('valor')
                                    ]),
                                    'TBILLEQ': d('Esta función devuelve el rendimiento equivalente a un bono del Tesoro (o T-bill)', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('descuento')
                                    ]),
                                    'TBILLPRICE': d('Esta función devuelve el precio por cada 100 dólares de valor nominal de un bono del Tesoro (o T-bill).', [
                                        e('settlement'),
                                        e('maturity'),
                                        e('discount')
                                    ]),
                                    'TBILLYIELD': d('Esta función devuelve el rendimiento de un bono del Tesoro (o T-bill).', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('priceper')
                                    ]),
                                    'TDIST': d('Esta función devuelve la probabilidad de la distribución t.', [
                                        e('x'),
                                        e('deg_freedom'),
                                        e('tails')
                                    ]),
                                    'TEXT': d('Esta función da formato a un número y lo convierte en texto.', [
                                        e('valor'),
                                        e('formato_texto')
                                    ]),
                                    'TIME': d('Esta función devuelve el objeto TimeSpan por un tiempo determinado.', [
                                        e('hora'),
                                        e('minuto'),
                                        e('segundo')
                                     ]),
                                    'TIMEVALUE': d('Esta función devuelve el objeto TimeSpan del tiempo representado por una cadena de texto.', [
                                        e('texto_hora')
                                    ]),
                                    'TINV': d('Esta función devuelve el valor t de la distribución t del estudiante en función de la probabilidad y los grados de libertad.', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'TODAY': d('Esta función devuelve la fecha y la hora de la fecha actual.', []),
                                    'TRANSPOSE': d('Esta función devuelve un rango vertical de celdas como un rango horizontal o un rango horizontal de celdas como un rango vertical.', [
                                        e('array')
                                    ]),
                                    'TREND': d('Esta función devuelve valores a lo largo de una tendencia lineal. Esta función ajusta una línea recta a los arrays conocidos de valores x y y. La tendencia devuelve los valores y a lo largo de esa línea para el array de nuevos valores x especificados.', [
                                        e('y'),
                                        e('x'),
                                        e('newx'),
                                        e('constante')
                                    ]),
                                    'TRIM': d('Esta función elimina los espacios extra de una cadena y deja espacios individuales entre las palabras.', [
                                        e('texto')
                                    ]),
                                    'TRIMMEAN': d('Esta función devuelve la media de un subconjunto de datos excluyendo los datos superiores e inferiores.', [
                                        e('array'),
                                        e('porcentaje')
                                    ]),
                                    'TRUE': d('Esta función devuelve el valor para la lógica TRUE.', []),
                                    'TRUNC': d('Esta función elimina la parte fraccionaria del número especificado.', [
                                        e('valor'),
                                        e('num_digits')
                                    ]),
                                    'TTEST': d('Esta función devuelve la probabilidad asociada a una prueba t.', [
                                        e('array1'),
                                        e('array2'),
                                        e('uni_bilateral'),
                                        e('type')
                                    ]),
                                    'TYPE': d('Esta función devuelve el tipo de valor.', [
                                        e('valor')
                                    ]),
                                    'UPPER': d('Esta función convierte el texto en letras mayúsculas.', [
                                        e('texto')
                                    ]),
                                    'VALUE': d('Esta función convierte una cadena de texto que es un número en un valor numérico.', [
                                        e('texto')
                                    ]),
                                    'VAR': d('Esta función devuelve la varianza basada en una muestra de una población, que utiliza sólo valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'VARA': d('Esta función devuelve la varianza basada en una muestra de una población, que incluye valores numéricos, lógicos o de texto.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'VARP': d('Esta función devuelve la varianza basada en toda la población, que utiliza sólo valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'VARPA': d('Esta función devuelve la varianza basada en toda la población, que incluye valores numéricos, lógicos o de texto.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'VDB': d('Esta función devuelve la depreciación de un activo fijo para cualquier período que se especifique utilizando el método de balance decreciente variable.', [
                                        e('costo'),
                                        e('recuperación'),
                                        e('vida'),
                                        e('inicio_periodo'),
                                        e('fin_periodo'),
                                        e('factor'),
                                        e('no_switch')
                                    ]),
                                    'VLOOKUP': d('Esta función busca un valor en la columna de la izquierda y devuelve un valor en la misma fila de una columna que se especifica.', [
                                        e('lookup_value'),
                                        e('table_array'),
                                        e('col_index_num'),
                                        e('range_lookup')
                                    ]),
                                    'WEEKDAY': d('Esta función devuelve el número correspondiente al día de la semana para una fecha determinada.', [
                                        e('date'),
                                        e('type')
                                    ]),
                                    'WEEKNUM': d('Esta función devuelve un número que indica numéricamente la semana del año.', [
                                        e('date'),
                                        e('weektype')
                                    ]),
                                    'WEIBULL': d('Esta función devuelve la distribución de Weibull de dos parámetros, a menudo utilizada en el análisis de fiabilidad.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('cumulative')
                                    ]),
                                    'DATEPART': d('This function formats a date and converts it to text.', [
                                        e('date'),
                                        e('format_text'),
                                        e('weektype')
                                    ]),
                                   'WORKDAY': d('Esta función devuelve el número de días laborables antes o después de la fecha de inicio.', [
                                        e('fecha_inicial'),
                                        e('días'),
                                        e('vacaciones')
                                    ]),
                                    'XIRR': d('Esta función calcula la tasa interna de rendimiento para una lista de flujos de efectivo que puede no ser periódica.', [
                                        e('valores'),
                                        e('dates'),
                                        e('estimación')
                                    ]),
                                    'XNPV': d('Esta función calcula el valor actual neto de una lista de corrientes de efectivo que puede no ser periódica.', [
                                        e('tasa'),
                                        e('valores'),
                                        e('dates')
                                    ]),
                                    'YEAR': d('Esta función devuelve el año como un entero para una fecha determinada.', [
                                        e('date')
                                    ]),
                                    'YEARFRAC': d('Esta función devuelve la fracción del año representada por el número de días enteros entre las fechas de inicio y fin.', [
                                        e('fecha_inicial'),
                                        e('fecha_final'),
                                        e('base')
                                    ]),
                                    'YIELD': d('Esta función calcula el rendimiento de un título que paga intereses periódicos.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('tasa'),
                                        e('valor_nominal'),
                                        e('valor_redención'),
                                        e('frecuencia'),
                                        e('base')
                                    ]),
                                    'YIELDDISC': d('Esta función calcula el rendimiento anual de un valor con descuento.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('valor_nominal'),
                                        e('valor_redención'),
                                        e('base')
                                    ]),
                                    'YIELDMAT': d('Esta función calcula el rendimiento anual de un valor que paga intereses al vencimiento.', [
                                        e('liquidación'),
                                        e('madurez'),
                                        e('emisión'),
                                        e('tasa'),
                                        e('valor_nominal'),
                                        e('base')
                                    ]),
                                    'ZTEST': d('Esta función devuelve el valor de significación de una prueba z. La prueba z genera una puntuación estándar para x con respecto al conjunto de datos y devuelve la probabilidad de dos colas para la distribución normal.', [
                                        e('array'),
                                        e('x'),
                                        e('sigma')
                                    ]),
                                    'HBARSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico Hbar', [
                                        e('valor'),
                                        e('esquemas_color'),
                                        e('ejes_Visible'),
                                        e('altura_barra')
                                    ]),
                                    'VBARSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico Vbar', [
                                        e('valor'),
                                        e('esquemas_color'),
                                        e('ejes_Visible'),
                                        e('altura_barra')
                                    ]),
                                    'VARISPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico varianza', [
                                        e('variance'),
                                        e('referencia'),
                                        e('mini'),
                                        e('maxi'),
                                        e('mark'),
                                        e('tickunit'),
                                        e('legend'),
                                        e('colorPositivo'),
                                        e('colorNegativo'),
                                        e('vertical')
                                    ]),
                                    'PIESPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico pie', [
                                        e('rango|porcentaje'),
                                        e('color', true)
                                    ]),
                                    'AREASPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico área', [
                                        e('points'),
                                        e('mini'),
                                        e('maxi'),
                                        e('linea1'),
                                        e('linea2'),
                                        e('colorPositivo'),
                                        e('colorNegativo')
                                    ]),
                                    'SCATTERSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico dispersión', [
                                        e('points1'),
                                        e('points2'),
                                        e('minX'),
                                        e('maxX'),
                                        e('minY'),
                                        e('maxY'),
                                        e('hLinea'),
                                        e('vLinea'),
                                        e('xMinZone'),
                                        e('xMaxZone'),
                                        e('yMinZone'),
                                        e('yMaxZone'),
                                        e('tags'),
                                        e('drawSymbol'),
                                        e('drawLineas'),
                                        e('color1'),
                                        e('color2'),
                                        e('dash')
                                    ]),
                                    'LINESPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico línea', [
                                        e('data'),
                                        e('dataOrientation'),
                                        e('dateAxisData'),
                                        e('dateAxisOrientation'),
                                        e('parámetro')
                                    ]),
                                    'COLUMNSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico columna', [
                                        e('data'),
                                        e('dataOrientation'),
                                        e('dateAxisData'),
                                        e('dateAxisOrientation'),
                                        e('parámetro')
                                    ]),
                                    'WINLOSSSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico ganancia/pérdida', [
                                        e('data'),
                                        e('dataOrientation'),
                                        e('dateAxisData'),
                                        e('dateAxisOrientation'),
                                        e('parámetro')
                                    ]),
                                    'BULLETSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico bullet', [
                                        e('measure'),
                                        e('objetivo'),
                                        e('maxi'),
                                        e('bueno'),
                                        e('malo'),
                                        e('promedio'),
                                        e('tickunit'),
                                        e('color_esquema'),
                                        e('vertical'),
                                        e('measureColor'),
                                        e('targetColor'),
                                        e('maxiColor'),
                                        e('goodColor'),
                                        e('badColor'),
                                        e('forecastColor'),
                                        e('allowMeasureOverMaxi'),
                                        e('tamaño_barra')
                                    ]),
                                    'SPREADSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico de dispersión', [
                                        e('points'),
                                        e('mostrar:promedio'),
                                        e('scaleStart'),
                                        e('scaleEnd'),
                                        e('style'),
                                        e('esquemas-color'),
                                        e('vertical')
                                    ]),
                                    'STACKEDSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico stacked', [
                                        e('points'),
                                        e('rango_color'),
                                        e('labelRange'),
                                        e('maximum'),
                                        e('targetRed'),
                                        e('targetGreen'),
                                        e('targetBlue'),
                                        e('tragetYellow'),
                                        e('color'),
                                        e('highlightPosition'),
                                        e('vertical'),
                                        e('textOrientation'),
                                        e('textSize')
                                    ]),
                                    'BOXPLOTSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico boxplot', [
                                        e('points'),
                                        e('boxPlotClass'),
                                        e('showAverage'),
                                        e('scaleStart'),
                                        e('scaleEnd'),
                                        e('acceptableStart'),
                                        e('acceptableEnd'),
                                        e('colorScheme'),
                                        e('style'),
                                        e('vertical')
                                    ]),
                                    'CASCADESPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico cascada ', [
                                        e('pointsRange'),
                                        e('pointIndex'),
                                        e('labelsRange'),
                                        e('minimum'),
                                        e('maximum'),
                                        e('colorPositive'),
                                        e('colorNegative'),
                                        e('vertical'),
                                        e("itemTypeRange"), 
                                        e("colorTotal")
                                    ]),
                                    'PARETOSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico pareto', [
                                        e('points'),
                                        e('pointIndex'),
                                        e('rango_color'),
                                        e('target'),
                                        e('target2'),
                                        e('highlightPosition'),
                                        e('etiqueta'),
                                        e('vertical'),
                                        e('targetColor'),
                                        e('target2Color'),
                                        e('labelColor'),
                                        e('tamaño_barra')
                                    ]),
                                    'MONTHSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico mes ', [
                                        e('año'),
                                        e('año'),
                                        e('rango_dato'),
                                        e('color_vacio'),
                                        e('color_inicio'),
                                        e('color_medio'),
                                        e('color_fin')
                                    ]),
                                    'YEARSPARKLINE': d('Esta función devuelve un conjunto de datos utilizados para representar un minigráfico año ', [
                                        e('año'),
                                        e('rango_dato'),
                                        e('color_vacio'),
                                        e('color_inicio'),
                                        e('color_medio'),
                                        e('color_fin')
                                    ]),
                                    'GAUGEKPISPARKLINE': d('Esta función devuelve un conjunto de datos utilizado para representar una miniatura de indicador de rendimiento clave (KPI) de medidor', [
                                            e('targetValue'),
                                            e('currentValue'),
                                            e('minValue'),
                                            e('maxValue'),
                                            e('showLabel'),
                                            e('targetValueLabel'),
                                            e('currentValueLabel'),
                                            e('minValueLabel'),
                                            e('maxValueLabel'),
                                            e('fontArray'),
                                            e('minAngle'),
                                            e('maxAngle'),
                                            e('radiusRatio'),
                                            e('gaugeType'),
                                            e('colorRange'),
                                            e('...'),
                                        ]
                                    ),
                                    'HISTOGRAMSPARKLINE': d('Esta función devuelve un conjunto de datos utilizado para representar una gráfica de histograma en miniatura.', [
                                            e('dateRange'),
                                            e('continuous'), 
                                            e('paintLabel'), 
                                            e('scale'), 
                                            e('barWidth'), 
                                            e('barColor'), 
                                            e('labelFontStyle'), 
                                            e('labelColor'), 
                                            e('edgeColor')
                                    ]),
                                    'CEILING.PRECISE': d('Esta función redondea un número hasta el entero más cercano o hasta el múltiplo más cercano de un valor especificado.', [
                                        e('número'),
                                        e(y)
                                    ]),
                                    'COVARIANCE.S': d('Esta función devuelve la covarianza de la muestra, que es el promedio de los productos de las desviaciones de cada par de puntos de datos en dos conjuntos de números.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'FLOOR.PRECISE': d('Esta función redondea un número al entero más cercano o al múltiplo más cercano de un valor especificado.', [
                                        e('número'),
                                        e(y)
                                    ]),
                                    'PERCENTILE.EXC': d('Esta función devuelve el percentil n de valores en un rango.', [
                                        e('array'),
                                        e('k')
                                    ]),
                                    'QUARTILE.EXC': d('Esta función devuelve qué cuartil (qué trimestre o 25 por ciento) de un conjunto de datos es un valor.', [
                                        e('array'),
                                        e('quart')
                                    ]),
                                    'RANK.AVG': d('Esta función devuelve el rango de un número en un conjunto de números. Si algunos valores tienen el mismo rango, devolverá el rango promedio.', [
                                        e('número'),
                                        e('array'),
                                        e('[order]')
                                    ]),
                                    'MODE.MULT': d('Esta función devuelve el array vertical más frecuente o el valor más frecuente de un conjunto de datos.', [
                                        e('número1'),
                                        e('número2', true)
                                    ]),
                                    'STDEV.P': d('Esta función devuelve la desviación estándar para toda una población especificada (de valores numéricos).', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'VAR.P': d('Esta función devuelve la varianza basada en toda la población, que utiliza sólo valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'COVARIANCE.P': d('Esta función devuelve la covarianza, que es el promedio de los productos de las desviaciones de cada par de puntos de datos en dos conjuntos de números.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'MODE.SNGL': d('Esta función devuelve el valor más frecuente de un conjunto de datos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'PERCENTILE.INC': d('Esta función devuelve el percentil n de valores en un rango.', [
                                        e('array'),
                                        e('n')
                                    ]),
                                    'QUARTILE.INC': d('Esta función devuelve qué cuartil (qué trimestre o 25 por ciento) de un conjunto de datos es un valor.', [
                                        e('array'),
                                        e('quart')
                                    ]),
                                    'RANK.EQ': d('Esta función devuelve el rango de un número en un conjunto de números. Si tuvieras que ordenar el conjunto, el rango del número sería su posición en la lista.', [
                                        e('número'),
                                        e('array'),
                                        e('[order]')
                                    ]),
                                    'STDEV': d('Esta función devuelve la desviación estándar se estima sobre la base de una muestra.', [
                                        e('número1'),
                                        e('número2', true)
                                    ]),
                                    'STDEV.S': d('Esta función devuelve la desviación estándar se estima sobre la base de una muestra.', [
                                        e('número1'),
                                        e('número2', true)
                                    ]),
                                    'VAR.S': d('Esta función devuelve la varianza basada en una muestra de una población, que utiliza sólo valores numéricos.', [
                                        e('valor1'),
                                        e('valor2', true)
                                    ]),
                                    'BETA.INV': d('Esta función calcula el inverso de la función de distribución beta acumulativa.', [
                                        e('probabilidad'),
                                        e('alpha'),
                                        e('beta'),
                                        e('[inferior]'),
                                        e('[superior]')
                                    ]),
                                    'BINOM.DIST': d('Esta función calcula la probabilidad de distribución binomial del término individual.', [
                                        e('number_s'),
                                        e('trials'),
                                        e('probability_s'),
                                        e('cumulative')
                                    ]),
                                    'BINOM.INV': d('Esta función devuelve el binomio de criterio, el valor más pequeño para el que la distribución binomial acumulativa es mayor o igual que un valor de criterio.', [
                                        e('trials'),
                                        e('probability_s'),
                                        e('alpha')
                                    ]),
                                    'CHISQ.DIST.RT': d('Esta función calcula la probabilidad de una cola de la distribución chi-cuadrado.', [
                                        e('valor'),
                                        e('deg_freedom')
                                    ]),
                                    'CHISQ.INV.RT': d('Esta función calcula el inverso de la probabilidad de una cola de la distribución chi-cuadrado.', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'CHISQ.TEST': d('Esta función calcula la prueba de independencia de la distribución chi-cuadrado.', [
                                        e('obs_array'),
                                        e('exp_array')
                                    ]),
                                    'CONFIDENCE.NORM': d('Esta función devuelve el intervalo de confianza para una media de la población.', [
                                        e('alpha'),
                                        e('standard_dev'),
                                        e('tamaño')
                                    ]),
                                    'EXPON.DIST': d('Esta función devuelve la distribución exponencial o la densidad de probabilidad.', [
                                        e('valor'),
                                        e('lambda'),
                                        e('cumulative')
                                    ]),
                                    'F.DIST.RT': d('Esta función calcula la distribución de probabilidad F, para ver los grados de diversidad entre dos conjuntos de datos.', [
                                        e('valor'),
                                        e('deg_freedom1'),
                                        e('deg_freedom2')
                                    ]),
                                    'F.INV.RT': d('Esta función devuelve el inverso de la distribución de probabilidad F.', [
                                        e('probabilidad'),
                                        e('deg_freedom1'),
                                        e('deg_freedom2')
                                    ]),
                                    'F.TEST': d('Esta función devuelve el resultado de una prueba F, que devuelve la probabilidad de una cola de que las variaciones en dos matrices no sean significativamente diferentes.', [
                                        e('array1'),
                                        e('array2')
                                    ]),
                                    'GAMMA.DIST': d('Esta función devuelve la distribución gamma.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('cumulative')
                                    ]),
                                    'GAMMA.INV': d('Esta función devuelve el inverso de la distribución acumulativa gamma.', [
                                        e('probabilidad'),
                                        e('alpha'),
                                        e('beta')
                                    ]),
                                    'LOGNORM.INV': d('Esta función devuelve el inverso de la función de distribución acumulativa logarítmica de x, donde LN(x) se distribuye normalmente con la media y la desviación estándar especificadas.', [
                                        e('probabilidad'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'NORM.DIST': d('Esta función devuelve la distribución acumulativa normal para la media y la desviación estándar especificadas.', [
                                        e('x'),
                                        e('media'),
                                        e('standard_dev'),
                                        e('cumulative')
                                    ]),
                                    'NORM.INV': d('Esta función devuelve la distribución acumulativa normal para la media y la desviación estándar especificadas.', [
                                        e('probabilidad'),
                                        e('media'),
                                        e('standard_dev')
                                    ]),
                                    'NORM.S.INV': d('Esta función devuelve el inverso de la distribución acumulativa normal estándar. La distribución tiene una media de cero y una desviación estándar de uno.', [
                                        e('probabilidad')
                                    ]),
                                    'PERCENTRANK.INC': d('Esta función devuelve el rango de un valor en un conjunto de datos como un porcentaje del conjunto de datos.', [
                                        e('array'),
                                        e('n'),
                                        e(y)
                                    ]),
                                    'POISSON.DIST': d('Esta función devuelve la distribución de Poisson.', [
                                        e('nevents'),
                                        e('media'),
                                        e('cumulative')
                                    ]),
                                    'T.INV.2T': d('Esta función devuelve el valor t de la distribución t del estudiante en función de la probabilidad y los grados de libertad.', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'T.TEST': d('Esta función devuelve la probabilidad asociada a una prueba t.', [
                                        e('array1'),
                                        e('array2'),
                                        e('tails'),
                                        e('type')
                                    ]),
                                    'WEIBULL.DIST': d('Esta función devuelve la distribución de Weibull de dos parámetros, a menudo utilizada en el análisis de confiabilidad.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('cumulative')
                                    ]),
                                    'Z.TEST': d('Esta función devuelve el valor de significación de una prueba z. La prueba z genera una puntuación estándar para x con respecto al conjunto de datos y devuelve la probabilidad de dos colas para la distribución normal.', [
                                        e('array'),
                                        e('x'),
                                        e('[sigma]')
                                    ]),
                                    'T.DIST.RT': d('Esta función devuelve la distribución t de la cola derecha.', [
                                        e('x'),
                                        e('deg_freedom')
                                    ]),
                                    'T.DIST.2T': d('Esta función devuelve la distribución t de dos colas.', [
                                        e('x'),
                                        e('deg_freedom')
                                    ]),
                                    'ISO.CEILING': d('Esta función devuelve un número hasta el entero más cercano o hasta el múltiplo de significación más cercano, independientemente del signo de significación.', [
                                        e('número'),
                                        e(y)
                                    ]),
                                    'BETA.DIST': d('Esta función devuelve la distribución beta.', [
                                        e('x'),
                                        e('alpha'),
                                        e('beta'),
                                        e('cumulative'),
                                        e('inferior'),
                                        e('superior')
                                    ]),
                                    'GAMMALN.PRECISE': d('Esta función devuelve el logaritmo natural de la función gamma.', [
                                        e('valor')
                                    ]),
                                    'ERF.PRECISE': d('Esta función devuelve la función de error.', [
                                        e('limite_inferior')
                                    ]),
                                    'ERFC.PRECISE': d('Esta función devuelve la función ERF complementaria.', [
                                        e('limite_inferior')
                                    ]),
                                    'PERCENTRANK.EXC': d('Esta función devuelve el rango porcentual(0..1, exclusivo) de un valor en un conjunto de datos.', [
                                        e('array'),
                                        e('x'),
                                        e(y)
                                    ]),
                                    'HYPGEOM.DIST': d('Esta función devuelve la distribución hipergeométrica.', [
                                        e('sample_s'),
                                        e('number_sample'),
                                        e('population_s'),
                                        e('number_pop'),
                                        e('cumulative')
                                    ]),
                                    'LOGNORM.DIST': d('Esta función devuelve la distribución normal de x.', [
                                        e('x'),
                                        e('media'),
                                        e('standard_dev'),
                                        e('cumulative')
                                    ]),
                                    'NEGBINOM.DIST': d('Esta función devuelve la distribución binomial negativa.', [
                                        e('number_f'),
                                        e('number_s'),
                                        e('probability_s'),
                                        e('cumulative')
                                    ]),
                                    'NORM.S.DIST': d('Esta función devuelve la distribución normal estándar.', [
                                        e('z'),
                                        e('cumulative')
                                    ]),
                                    'T.DIST': d('Esta función devuelve la distribución t.', [
                                        e('x'),
                                        e('deg_freedom'),
                                        e('cumulative')
                                    ]),
                                    'F.DIST': d('Esta función devuelve la distribución de probabilidad F.', [
                                        e('x'),
                                        e('degnum'),
                                        e('degden'),
                                        e('cumulative')
                                    ]),
                                    'CHISQ.DIST': d('Esta función devuelve la distribución chi-cuadrado.', [
                                        e('x'),
                                        e('deg_freedom'),
                                        e('cumulative')
                                    ]),
                                    'F.INV': d('Esta función devuelve el inverso de la distribución de probabilidad F.', [
                                        e('probabilidad'),
                                        e('degnum'),
                                        e('degden')
                                    ]),
                                    'T.INV': d('Esta función devuelve el inverso de la cola izquierda de la distribución t.', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'CHISQ.INV': d('Esta función devuelve el inverso de la probabilidad de la cola izquierda de la distribución chi-cuadrado.', [
                                        e('probabilidad'),
                                        e('deg_freedom')
                                    ]),
                                    'CONFIDENCE.T': d('Esta función devuelve el intervalo de confianza para la distribución de t de Student.', [
                                        e('alpha'),
                                        e('standard_dev'),
                                        e('tamaño')
                                    ]),
                                    'NETWORKDAYS.INTL': d('Esta función devuelve el número de días laborables entre dos fechas utilizando argumentos para indicar días festivos y de fin de semana.', [
                                        e('fecha_inicio'),
                                        e('fecha_fin'),
                                        e('[weekend]'),
                                        e('[vacaciones]')
                                    ]),
                                    'WORKDAY.INTL': d('Esta función devuelve el número de serie de la fecha anterior o posterior a un número de días laborables con parámetros de fin de semana personalizados. Estos parámetros indican los días de fin de semana y las vacaciones.', [
                                        e('fecha_inicio'),
                                        e('days'),
                                        e('[weekend]'),
                                        e('[vacaciones]')
                                    ]),
                                    'REFRESH': d('Esta función decide cómo recalcular la fórmula. Puede utilizar el argumento evaluateMode para especificar la fórmula recalcular sobre el valor de referencia cambiado, evaluar una vez, recalcular o intervalo.', [
                                        e('fórmula'),
                                        e('modo_evaluación'),
                                        e('interval')
                                    ]),
                                    'DAYS': d('Esta función devuelve el número de días entre dos fechas.', [
                                        e('fecha_inicio'),
                                        e('fecha_fin')
                                    ]),
                                    'ISOWEEKNUM': d('Esta función devuelve el número de la semana ISO del año para una fecha determinada.', [
                                        e('date')
                                    ]),
                                    'BITAND': d('Esta función devuelve un bit a bit "AND" de dos números.', [
                                        e('número1'),
                                        e('número2')
                                    ]),
                                    'BITLSHIFT': d('Esta función devuelve un bit a bit "OR" de dos números.', [
                                        e('número1'),
                                        e('shift_amount')
                                    ]),
                                    'BITOR': d('Esta función devuelve un bit a bit "OR" de dos números.', [
                                        e('número1'),
                                        e('número2')
                                    ]),
                                    'BITRSHIFT': d('Esta función devuelve un bit a bit "OR" de dos números.', [
                                        e('número1'),
                                        e('shift_amount')
                                    ]),
                                    'BITXOR': d('Esta función devuelve un bit a bit "XOR" de dos números "XOR".', [
                                        e('número1'),
                                        e('número2')
                                    ]),
                                    'IMCOSH': d('Esta función devuelve el coseno hiperbólico de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMCOT': d('Esta función devuelve la cotangente de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMCSC': d('Esta función devuelve el cosecante de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMCSCH': d('Esta función devuelve el cosecante hiperbólico de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMSEC': d('Esta función devuelve la secante de un número complejo en formato de texto x+yi de x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMSECH': d('Esta función devuelve la secante hiperbólica de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMSINH': d('Esta función devuelve el seno hiperbólico de un número complejo en formato de texto x+yi de x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'IMTAN': d('Esta función devuelve la tangente de un número complejo en formato de texto x+yi o x+yj.', [
                                        e('complexnum')
                                    ]),
                                    'PDURATION': d('Esta función devuelve el número de períodos que requiere una inversión para alcanzar un valor determinado.', [
                                        e('tasa'),
                                        e('pval'),
                                        e('fval')
                                    ]),
                                    'RRI': d('Esta función devuelve un tipo de interés equivalente para el crecimiento de una inversión.', [
                                        e('nper'),
                                        e('pval'),
                                        e('fval')
                                    ]),
                                    'ISFORMULA': d('Esta función comprueba si contiene una fórmula de una celda de referencia.', [
                                        e('cellreference')
                                    ]),
                                    'IFNA': d('Esta función devuelve el valor especificado si la fórmula devuelve el valor de error #N/A, de lo contrario devuelve el resultado de la fórmula.', [
                                        e('valor'),
                                        e('value_if_na')
                                    ]),
                                    'IFS': d('Esta función verifica si se cumplen una o más condiciones y devuelve un valor que corresponde a la primera condición TRUE.', [
                                        e('logical_test1'),
                                        e('value_if_true1', true)
                                    ]),
                                    'SWITCH': d('Esta función evalúa un valor de una lista de valores y devuelve el resultado correspondiente al primer valor coincidente, de lo contrario devuelve el valor por defecto', [
                                        e('expression'),
                                        e('value1'),
                                        e('result1'),
                                        e('[default_or_value2]', true),
                                        e('[result2]', true)
                                    ]),
                                    'XOR': d('Esta función devuelve una "exclusive or" lógica de todos los argumentos.', [
                                        e('logical', true)
                                    ]),
                                    'AREAS': d('Esta función devuelve el número de áreas en una referencia.', [
                                        e('reference')
                                    ]),
                                    'FORMULATEXT': d('Esta función devuelve una fórmula como una cadena.', [
                                        e('reference')
                                    ]),
                                    'HYPERLINK': d('Esta función crea un atajo o salto que abre un documento almacenado en un servidor de red, una intranet o Internet.', [
                                        e('link_location'),
                                        e('friendly_name')
                                    ]),
                                    'ACOT': d('Esta función calcula la arcotangente inversa de un número.', [
                                        e('valor')
                                    ]),
                                    'ACOTH': d('Esta función calcula la arcotangente hiperbólica inversa de un número.', [
                                        e('valor')
                                    ]),
                                    'ARABIC': d('Esta función convierte un texto en números romanos en un equivalente en números arábigos.', [
                                        e('text')
                                    ]),
                                    'BASE': d('Esta función convierte un número en una representación de texto con el radix (base) dado.', [
                                        e('número'),
                                        e('radix'),
                                        e('[min_length]')
                                    ]),
                                    'CEILING.MATH': d('Esta función redondea un número hasta el entero más cercano o hasta el múltiplo de significación más cercano.', [
                                        e('valor'),
                                        e(y),
                                        e('[mode]')
                                    ]),
                                    'COMBINA': d('Esta función calcula el número de combinaciones posibles con repeticiones para un número determinado de elementos.', [
                                        e('número'),
                                        e('number_chosen')
                                    ]),
                                    'COT': d('Esta función devuelve la cotangente del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'COTH': d('Esta función devuelve la cotangente hiperbólica del número especificado.', [
                                        e('valor')
                                    ]),
                                    'CSC': d('Esta función devuelve el cosecante del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'CSCH': d('Esta función devuelve el cosecante hiperbólico del número especificado.', [
                                        e('valor')
                                    ]),
                                    'DECIMAL': d('Esta función convierte una representación de texto de un número en una base dada en un número decimal.', [
                                        e('text'),
                                        e('radix')
                                    ]),
                                    'FLOOR.MATH': d('Esta función redondea un número hasta el entero más cercano o hasta el múltiplo de importancia más cercano.', [
                                        e('valor'),
                                        e(y),
                                        e('[mode]')
                                    ]),
                                    'SEC': d('Esta función devuelve la secante del ángulo especificado.', [
                                        e('angle')
                                    ]),
                                    'SECH': d('Esta función devuelve el secante hiperbólico del valor especificado.', [
                                        e('valor')
                                    ]),
                                    'BINOM.DIST.RANGE': d('Esta función calcula la probabilidad del resultado de un ensayo utilizando una distribución binomial.', [
                                        e('trials'),
                                        e('probability_s'),
                                        e('number_s'),
                                        e('[number_s2]')
                                    ]),
                                    'GAMMA': d('sta función devuelve el valor de la función gamma.', [
                                        e('número')
                                    ]),
                                    'MAXIFS': d('Esta función devuelve el valor máximo entre las celdas especificadas por un conjunto determinado de condiciones o criterios.', [
                                        e('max_range'),
                                        e('criteria_range', true),
                                        e('criteria', true)
                                    ]),
                                    'GAUSS': d('Esta función calcula la probabilidad de que un miembro de una población normal estándar se sitúe entre la media y las desviaciones estándar z de la media.', [
                                        e('número')
                                    ]),
                                    'MINIFS': d('Esta función devuelve el valor mínimo entre las celdas especificadas por un conjunto determinado de condiciones o criterios.', [
                                        e('min_range'),
                                        e('criteria_range',true),
                                        e('criteria', true)
                                    ]),
                                    'PERMUTATIONA': d('Esta función devuelve el número de permutaciones para un número dado de objetos que pueden ser seleccionados del total de objetos.', [
                                        e('número'),
                                        e('number_chosen')
                                    ]),
                                    'PHI': d('Esta función devuelve el valor de la función de densidad para una distribución normal estándar.', [
                                        e('valor')
                                    ]),
                                    'SKEW.P': d('Esta función devuelve la asimetría de una base de distribución en una población: una caracterización del grado de asimetría de una distribución en torno a su media.', [
                                        e('número1'),
                                        e('número2', true)
                                    ]),
                                    'BAHTTEXT': d('This function converts a number to Thai text and adds a suffix of "Baht"', [
                                        e('number')
                                    ]),
                                    'CONCAT': d('This function combines multiple text strings or numbers into one text string, the function will stay available for compatibility with "CONCATENATE" function.', [
                                        e('text1'),
                                        e('text2', true)
                                    ]),






                                  'FINDB': d('Esta función encuentra un valor de texto dentro de otro y devuelve la posición del valor de texto en el texto buscado, y cuenta cada carácter de doble byte como 2 cuando se establece el DBCS como lenguaje por defecto.', [
                                        e('buscar_texto'),                                    e('within_text'),
                                        e(x)
                                    ]),
                                    'LEFTB': d('Esta función devuelve los caracteres más a la izquierda especificados a partir de un valor de texto, y en base al número de bytes que especifique.', [
                                        e('texto'),
                                        e('num_bytes')
                                    ]),
                                    'LENB': d('Esta función devuelve la longitud del número de bytes de una cadena de texto.', [
                                        e('texto')
                                    ]),
                                    'MIDB': d('Esta función devuelve el número de caracteres solicitados de una cadena de texto a partir de la posición que se especifique, y basándose en el número de bytes que se especifique.', [
                                        e('texto'),
                                        e('posición_inicial'),
                                        e('num_bytes')
                                    ]),
                                    'REPLACEB': d('Esta función reemplaza parte de una cadena de texto con una cadena de texto diferente, basada en el número de bytes que especifique.', [
                                        e('antiguo_texto'),
                                        e('inicio_byte'),
                                        e('num_bytes'),
                                        e('nuevo_texto')
                                    ]),
                                    'RIGHTB': d('Esta función devuelve los caracteres más a la derecha especificados a partir de un valor de texto, y en base al número de bytes que especifique.', [
                                        e('texto'),
                                        e('num_bytes')
                                    ]),
                                    'SEARCHB': d('Esta función encuentra una cadena de texto en otra cadena de texto y devuelve el índice de la posición inicial del texto encontrado, y cuenta cada caracte de doble byte como 2 cuando se establece el DBCS como lenguaje por defecto.', [
                                        e('buscar_texto'),
                                        e('en_texto'),
                                        e(x)
                                    ]),
                                    'TEXTJOIN': d('Esta función combina múltiples rangos y/o cadenas en un texto, y el texto incluye un delimitador que se especifica entre cada valor del texto.', [
                                        e('delimitador'),
                                        e('ignorar_vacío'),
                                        e('texto1'),
                                        e('texto2', true)
                                    ]),
                                    'UNICHAR': d('Esta función devuelve el carácter Unicode de una referencia numérica dada.', [
                                        e('número')
                                    ]),
                                    'UNICODE': d('Esta función devuelve el número correspondiente al primer carácter del texto.', [
                                        e('texto')
                                    ]),
                                    'ENCODEURL': d('Esta función devuelve una cadena codificada con URL.', [
                                        e('texto')
                                    ]),
                                    'BC_QRCODE': d('Esta función devuelve un conjunto de datos para representar un QRCode', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('nivel_corrección_error'),
                                        e('modelo'),
                                        e('versión'),
                                        e('mask'),
                                        e('conexión'),
                                        e('número_conexión'),
                                        e('codigo_caracter'),
                                        e('charset'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_EAN13': d('Esta función devuelve un conjunto de datos para representar un EAN13.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('addOn'),
                                        e('addOnLabelPosition'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_EAN8': d('Esta función devuelve un conjunto de datos para representar un EAN8.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_CODABAR': d('Esta función devuelve un conjunto de datos para representar una CODABAR.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('checkDigit'),
                                        e('nwRatio'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_CODE39': d('Esta función devuelve un conjunto de datos para representar un CODE39.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('labelWithStartAndStopCharacter'),
                                        e('checkDigit'),
                                        e('nwRatio'),
                                        e('fullASCII'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_CODE93': d('Esta función devuelve un conjunto de datos para representar un CODE93.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('checkDigit'),
                                        e('fullASCII'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_CODE128': d('Esta función devuelve un conjunto de datos para representar un CODE128.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('codeSet'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_GS1_128': d('Esta función devuelve un conjunto de datos para representar un GS1_128.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_CODE49': d('Esta función devuelve un conjunto de datos para representar un CODE49.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('mostrar_etiqueta'),
                                        e('posición_etiqueta'),
                                        e('grouping'),
                                        e('groupNo'),
                                        e('familia_fuente'),
                                        e('estilo_fuente'),
                                        e('grueso_fuente'),
                                        e('texto_Decoración'),
                                        e('textAlign'),
                                        e('tamaño_fuente'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_PDF417': d('Esta función devuelve un conjunto de datos para representar un PDF417.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('nivel_corrección_error'),
                                        e('rows'),
                                        e('columns'),
                                        e('compact'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'BC_DATAMATRIX': d('Esta función devuelve un conjunto de datos para representar un DATAMATRIX.', [
                                        e('valor'),
                                        e('color'),
                                        e('color_fondo'),
                                        e('eccMode'),
                                        e('ecc200SymbolSize'),
                                        e('ecc200EncodingMode'),
                                        e('ecc00_140SymbolSize'),
                                        e('structuredAppend'),
                                        e('structureNumber'),
                                        e('identificador_archivo'),
                                        e('quietZoneLeft'),
                                        e('quietZoneRight'),
                                        e('quietZoneTop'),
                                        e('quietZoneBottom')
                                    ]),
                                    'FILTER': d('Esta función filtra un rango o array.', [
                                        e('array'),
                                        e('include'),
                                        e('si_vacío')
                                    ]),
                                    'RANDARRAY': d('Esta función devuelve una serie de números aleatorios.', [
                                        e('líneas'),
                                        e('columnas'),
                                        e('min'),
                                        e('max'),
                                        e('número_completo')
                                    ]),
                                    'SEQUENCE': d('Esta función devuelve una secuencia de números.', [
                                        e('líneas'),
                                        e('columnas'),
                                        e('inicio'),
                                        e('paso')
                                    ]),
                                    'SINGLE': d('Esta función devuelve un valor único cuando se le da un valor, rango o array.', [
                                        e('valor')
                                    ]),
                                    'SORT': d('Esta función ordena un rango o array.', [
                                        e('array'),
                                        e('sort_index'),
                                        e('sort_order'),
                                        e('por_columna')
                                    ]),
                                    'SORTBY': d('Esta función ordena un rango o conjunto basado en los valores de un rango o array correspondiente.', [
                                        e('array'),
                                        e('by_array1'),
                                        e('sort_order1'),
                                        e('by_array2',true),
                                        e('sort_order2',true)
                                    ]),
                                    'UNIQUE': d('Esta función devuelve los valores únicos de un rango o un array.', [
                                        e('array'),
                                        e('por_columna'),
                                        e('ocurrencia_única')
                                    ]),
                                    'QUERY': d('This function returns data from data manager tables in a worksheet.', [
                                        e('tableAndRows'),
                                        e('columns')
                                    ]),
                                    'LET': d('Esta función asigna los resultados de los cálculos a nombres. Es útil para almacenar cálculos y valores intermedios mediante la definición de nombres dentro de una fórmula. Estos nombres sólo se aplican dentro del ámbito de la función LET.',[
                                            e("nombre1"), 
                                            e("nombre_valor1"), 
                                            e("calculos_o_nombre2"), 
                                            e("[nombre_valor2, ...")
                                    ]),
                                    'IMAGE': d('Esta función introduce una URL o una cadena base64 para mostrar una imagen en la celda', [
                                            e("URL"),
                                            e("[modo]"),
                                            e("[alto]"),
                                            e("[ancho]"),
                                            e("[clipY]"),
                                            e("[clipX]"),
                                            e("[clipHeight]"),
                                            e("[clipWidth]"),
                                            e("[vAlign]"),
                                            e("[hAlign]")
                                    ]),
                                    'GETPIVOTDATA': d('Esta función extrae los datos almacenados en una PivotTable', [
                                            e('campo_datos'),
                                            e('pivot_table'),
                                            e('[campo1, elemento1]'),
                                            e('...')
                                    ]),
                                    'WEBSERVICE': d('Esta función devuelve datos de un servicio web', [
                                            e('url')
                                    ]),
                                    'FILTERJSON': d('Esta función convierte una cadena json en un valor escalar, un objeto o un array de objetos.', [
                                            e('json_string')
                                    ]),
                                    'ASC': d("The ASC function changes full-width(double-byte) characters to half-width(single-byte) characters, Use with double-byte character sets (DBCS).", [
                                            e("text")
                                    ]),
                                    'DBCS': d("The DBCS function converts half-width(single-byte) letters within a character string to full-width(double-byte) characters.", [
                                            e("text")
                                    ]),
                                    'LAMBDA': d("Creates a function value, which can be called within formulas.", [
                                            e("parameter_or_calculation"), 
                                            e("[parameter_or_calculation]", !0)
                                    ]),
                                    'MAP': d("Returns an array formed by mapping each value in the array(s) to a new value by applying a LAMBDA to create a new value.", [
                                            e("array"), 
                                            e("lambda_or_array", !0)
                                    ]),
                                    'REDUCE': d("Reduces an array to an accumulated value by applying a LAMBDA to each value and returning the total value in the accumulator.", [
                                            e("init_value"), 
                                            e("array"), 
                                            e("function")
                                    ]),
                                    'SCAN': d("Scans an array by applying a LAMBDA to each value and returns an array that has each intermediate value.", [
                                            e("init_value"), 
                                            e("array"),
                                            e("function")
                                    ]),
                                    'MAKEARRAY': d("Returns a calculated array of a specified row and column size, by applying a LAMBDA.", [
                                            e("rows"), 
                                            e("cols"), 
                                            e("function")
                                    ]),
                                    'BYCOL': d("Applies a LAMBDA to each column and returns an array of the results. For example, if the original array is 3 columns by 2 rows, the returned array is 3 columns by 1 row.", [
                                            e("array"),
                                            e("function"),
                                    ]),
                                    'BYROW': d("Applies a LAMBDA to each row and returns an array of the results. For example, if the original array is 3 columns by 2 rows, the returned array is 1 column by 2 rows.", [
                                            e("array"),
                                            e("function"),
                                    ]),
                                    'ISOMITTED': d("Checks whether the value in a LAMBDA is missing and returns TRUE or FALSE.", [
                                            e("argument")
                                    ]),
                                    'TEXTBEFORE': d("Returns text that occurs before a given character or string.", [
                                            e("text"), 
                                            e("delimiter"), 
                                            e("[instance_num]"), 
                                            e(zf), 
                                            e("[match_end]"),
                                            e(zg)
                                    ]),
                                    'TEXTAFTER': d("Returns text that occurs after given character or string.", [
                                            e("text"), 
                                            e("delimiter"), 
                                            e("[instance_num]"), 
                                            e(zf), 
                                            e("[match_end]"), 
                                            e(zg)
                                    ]),
                                    'TEXTSPLIT': d("Splits text strings by using column and row delimiters.", [
                                            e("text"), 
                                            e("col_delimiter"), 
                                            e("[row_delimiter]"), 
                                            e("[ignore_empty]"), 
                                            e(zf), 
                                            e(zh)
                                    ]),
                                    'VSTACK': d("Appends arrays vertically and in sequence to return a larger array.", [
                                            e("array1"), 
                                            e("[array2]", 
                                            !0)
                                    ]),
                                    'HSTACK': d("Appends arrays horizontally and in sequence to return a larger array.", [
                                            e("array1"), 
                                            e("[array2]", 
                                            !0)
                                    ]),
                                    'TOROW': d("Returns the array in a single row.", [
                                            e("array"), 
                                            e("[ignore]"), 
                                            e("[scan_by_column]")
                                    ]),
                                    'TOCOL': d("Returns the array in a single column.", [
                                            e("array"), 
                                            e("[ignore]"), 
                                            e("[scan_by_column]")
                                    ]),
                                    'WRAPROWS': d("Wraps the provided row or column of values by rows after a specified number of elements to form a new array.", [
                                            e("vector"), 
                                            e("wrap_count"), 
                                            e(zh)
                                    ]),
                                    'WRAPCOLS': d("Wraps the provided row or column of values by columns after a specified number of elements to form a new array.", [
                                            e("vector"), 
                                            e("wrap_count"), 
                                            e(zh)
                                    ]),
                                    'TAKE': d("Returns a specified number of contiguous rows or columns from the start or end of an array.", [
                                            e("array"), 
                                            e("rows"), 
                                            e("[columns]")
                                    ]),
                                    'DROP': d("Excludes a specified number of rows or columns from the start or end of an array.", [
                                            e("array"), 
                                            e("rows"), 
                                            e("[columns]")
                                    ]),
                                    'EXPAND': d("Expands or pads an array to specified row and column dimensions.", [
                                            e("array"), 
                                            e("rows"), 
                                            e("[columns]"), 
                                            e(zh)
                                    ]),
                                    'CHOOSEROWS': d("Returns the specified rows from an array.", [
                                            e("array"), 
                                            e("row_num1"), 
                                            e("[row_num2]", 
                                            !0)
                                    ]),
                                    'CHOOSECOLS': d("Returns the specified columns from an array.", [
                                            e("array"), 
                                            e("col_num1"), 
                                            e("[col_num2]",
                                            !0)
                                    ]),
                        },
                                B2: {
                                    All: {
                                        name: "#All",
                                        description: 'Devuelve todo el contenido de la tabla, o de las columnas especificadas de la tabla, incluyendo los encabezados de las columnas, los datos y las filas totales.'
                                    },
                                    Data: {
                                        name: "#Data",
                                        description: 'Devuelve las celdas de datos de la tabla o las columnas especificadas de la tabla.'
                                    },
                                    Headers: { name: "#Headers", description: 'Devuelve los encabezados de las columnas de la tabla, o las columnas especificadas de la tabla.' },
                                    Totals: { name: "#Totals", description: 'Devuelve el total de líneas de la tabla o las columnas especificadas de la tabla.' },
                                    thisRow: { name: "#This Row", description: 'Esta línea.' },
                                },
                            });
                        },
                        "./src/resource.es.entry.ts": function (a, b, c) {
                            "use strict";
                            Object.defineProperty(b, "__esModule", { value: !0 });
                            var d = c("./src/calcEngine.res.es.ts");
                            b.SR = { es: d.resource };
                        },
                    })),
                    (a.exports = c.Spread.CalcEngine);
            },
            "./node_modules_local/@grapecity/js-pivot/dist/gc.pivot.resources.es.js": function (a, b, c) {
                var d,
                    e,
                    f = "object" == typeof f ? f : {};
                (f.Pivot = (function (a) {
                    var b = {};
                    function c(d) {
                        if (b[d]) return b[d].exports;
                        var e = (b[d] = { i: d, l: !1, exports: {} });
                        return a[d].call(e.exports, e, e.exports, c), (e.l = !0), e.exports;
                    }
                    return (
                        (c.m = a),
                        (c.c = b),
                        (c.d = function (a, b, d) {
                            c.o(a, b) || Object.defineProperty(a, b, { enumerable: !0, get: d });
                        }),
                        (c.r = function (a) {
                            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
                        }),
                        (c.t = function (a, b) {
                            var d, e;
                            if ((1 & b && (a = c(a)), 8 & b)) return a;
                            if (4 & b && "object" == typeof a && a && a.__esModule) return a;
                            if (((d = Object.create(null)), c.r(d), Object.defineProperty(d, "default", { enumerable: !0, value: a }), 2 & b && "string" != typeof a))
                                for (e in a)
                                    c.d(
                                        d,
                                        e,
                                        function (b) {
                                            return a[b];
                                        }.bind(null, e)
                                    );
                            return d;
                        }),
                        (c.n = function (a) {
                            var b =
                                a && a.__esModule
                                    ? function b() {
                                          return a.default;
                                      }
                                    : function b() {
                                          return a;
                                      };
                            return c.d(b, "a", b), b;
                        }),
                        (c.o = function (a, b) {
                            return Object.prototype.hasOwnProperty.call(a, b);
                        }),
                        (c.p = ""),
                        c((c.s = "./src/resource.es.entry.ts"))
                    );
                })({
                    "./src/pivotEngine.res.es.ts": function (a, b, c) {
                        "use strict";
                        Object.defineProperty(b, "__esModule", { value: !0 }),
                            (b.resource = {
                                dateResource: {
                                    Jan: "Ene",
                                    Feb: "Feb",
                                    Mar: "Mar",
                                    Apr: "Abr",
                                    May: "May",
                                    Jun: "Jun",
                                    Jul: "Jul",
                                    Aug: "Ago",
                                    Sep: "Sep",
                                    Oct: "Oct",
                                    Nov: "Nov",
                                    Dec: "Dic",
                                    Qtr1: "T1",
                                    Qtr2: "T2",
                                    Qtr3: "T3",
                                    Qtr4: "T4",
                                    Seconds: "Segundos",
                                    Minutes: "Minutos",
                                    Hours: "Horas",
                                    Days: "Días",
                                    Months: "Meses",
                                    Quarters: "Trimestres",
                                    Years: "Años",
                                    SECOND_GROUP_ITEMS: [":00", ":01", ":02", ":03", ":04", ":05", ":06", ":07", ":08", ":09", ":10", ":11", ":12", ":13", ":14", ":15", ":16", ":17", ":18", ":19", ":20", ":21", ":22", ":23", ":24", ":25", ":26", ":27", ":28", ":29", ":30", ":31", ":32", ":33", ":34", ":35", ":36", ":37", ":38", ":39", ":40", ":41", ":42", ":43", ":44", ":45", ":46", ":47", ":48", ":49", ":50", ":51", ":52", ":53", ":54", ":55", ":56", ":57", ":58", ":59"],
                                    MINUTE_GROUP_ITEMS: [":00", ":01", ":02", ":03", ":04", ":05", ":06", ":07", ":08", ":09", ":10", ":11", ":12", ":13", ":14", ":15", ":16", ":17", ":18", ":19", ":20", ":21", ":22", ":23", ":24", ":25", ":26", ":27", ":28", ":29", ":30", ":31", ":32", ":33", ":34", ":35", ":36", ":37", ":38", ":39", ":40", ":41", ":42", ":43", ":44", ":45", ":46", ":47", ":48", ":49", ":50", ":51", ":52", ":53", ":54", ":55", ":56", ":57", ":58", ":59"],
                                    HOUR_GROUP_ITEMS: ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23"]                            
                                },
                                Exp_NoItemParseError: "No se encuentra el nombre de un elemento. Compruebe que ha escrito el nombre correctamente y que el elemento esté presente en el informe PivotTable.",
                                Exp_UnsupportedCalcItemType: "Las referencias, los nombres y los arrays no se soportan en las fórmulas de PivotTable.",
                                blank: "(blank)"
                            });
                    },
                    "./src/resource.es.entry.ts": function (a, b, c) {
                        "use strict";
                        Object.defineProperty(b, "__esModule", { value: !0 });
                        var d = c("./src/pivotEngine.res.es.ts");
                        b.SR = { es: d.resource };
                    },
                })),
                    (function (c) {
                        "object" == typeof a.exports
                            ? (a.exports = c.Pivot)
                            : ((d = []),
                              (e = function () {
                                  return c.Pivot;
                              }.apply(b, d)),
                              !(void 0 !== e && (a.exports = e)));
                    })(f || {});
            },
            "./node_modules_local/@grapecity/js-sheets-common/dist/gc.spread.common.resources.es.js": function (a, b) {
                var c = "object" == typeof c ? c : {};
                (c.Spread = c.Spread || {}),
                    (c.Spread.Common = (function (a) {
                        var b = {};
                        function c(d) {
                            if (b[d]) return b[d].exports;
                            var e = (b[d] = { i: d, l: !1, exports: {} });
                            return a[d].call(e.exports, e, e.exports, c), (e.l = !0), e.exports;
                        }
                        return (
                            (c.m = a),
                            (c.c = b),
                            (c.d = function (a, b, d) {
                                c.o(a, b) || Object.defineProperty(a, b, { enumerable: !0, get: d });
                            }),
                            (c.r = function (a) {
                                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(a, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(a, "__esModule", { value: !0 });
                            }),
                            (c.t = function (a, b) {
                                var d, e;
                                if ((1 & b && (a = c(a)), 8 & b)) return a;
                                if (4 & b && "object" == typeof a && a && a.__esModule) return a;
                                if (((d = Object.create(null)), c.r(d), Object.defineProperty(d, "default", { enumerable: !0, value: a }), 2 & b && "string" != typeof a))
                                    for (e in a)
                                        c.d(
                                            d,
                                            e,
                                            function (b) {
                                                return a[b];
                                            }.bind(null, e)
                                        );
                                return d;
                            }),
                            (c.n = function (a) {
                                var b =
                                    a && a.__esModule
                                        ? function b() {
                                            return a.default;
                                        }
                                        : function b() {
                                            return a;
                                        };
                                return c.d(b, "a", b), b;
                            }),
                            (c.o = function (a, b) {
                                return Object.prototype.hasOwnProperty.call(a, b);
                            }),
                            (c.p = "/assets/"),
                            c((c.s = "./src/resource.es.entry.ts"))
                        );
                    })({
                        "./src/common/util/util.res.es.ts": function (a, b, c) {
                            "use strict";
                            Object.defineProperty(b, "__esModule", { value: !0 }),
                                (b.Exp_InvalidDateFormat = 'Modelo de formato de fecha inválido'),
                                (b.Exp_InvalidExponentFormat = 'formato de exponente inválido'),
                                (b.Exp_InvalidSemicolons = 'formato inválido: demasiados punto y coma'),
                                (b.Exp_InvalidNumberGroupSize = 'NumberGroupSize debe estar entre 1 y 9, excepto el último elemento, que puede ser cero.'),
                                (b.Exp_BadFormatSpecifier = 'Especificador de mal formato'),
                                (b.Exp_InvalidNumberFormat = 'Modelo de formato de número inválido'),
                                (b.Exp_InvalidCast = 'InvalidCastException'),
                                (b.Exp_Separator = 'numberDecimalSeparator, listSeparator y arrayListSeparator deberían ser diferentes en la información de la clutura.')
                        },
                        "./src/plugins/formatter/formatter.res.es.ts": function (a, b, c) {
                            "use strict";
                            Object.defineProperty(b, "__esModule", { value: !0 }),
                                (b.Exp_TokenIsNull = 'El código es nulo'),
                                (b.Exp_InvalidBackslash = '\'\\\' no puede ser evaluado'),
                                (b.Exp_FormatIllegal = 'el formato es ilegal.'),
                                (b.Exp_ValueIsNull = 'valor es nulo'),
                                (b.Exp_DuplicatedDescriptor = 'Se añadió el tipo de descriptor.'),
                                (b.Exp_TokenIllegal = 'El código es ilegal.'),
                                (b.Exp_ValueIllegal = 'el valor es ilegal.'),
                                (b.Exp_InvalidCast = 'InvalidCastException')
                        },
                        "./src/resource.es.entry.ts": function (a, b, c) {
                            "use strict";
                            var d, e, f, g;
                            Object.defineProperty(b, "__esModule", { value: !0 }), (d = c("./src/common/util/util.res.es.ts")), (e = c("./src/plugins/formatter/formatter.res.es.ts")), (f = d);
                            for (g in e) e.hasOwnProperty(g) && (f[g] = e[g]);
                            b.SR = { es: f };
                        },
                    })),
                    (a.exports = c.Spread.Common);
            },
            "./resource.es.entry.js": function (b, c, d) {
                var e;
                function f(a, b, c) {
                    return g(a, b), g(a, c), a;
                }
                function g(a, b) {
                    for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]);
                    return a;
                }
                (a = a || {}),
                    (a.Spread = a.Spread || {}),
                    a.Spread.Common &&
                        a.Spread.Common.SR &&
                        ((e = d("./node_modules_local/@grapecity/js-sheets-common/dist/gc.spread.common.resources.es.js").SR.es),
                        (a.Spread.Common.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Common = g({}, e))),
                    a.Spread.CalcEngine &&
                        a.Spread.CalcEngine.SR &&
                        ((e = d("./node_modules_local/@grapecity/js-calc/dist/gc.spread.calcengine.resources.es.js").SR.es),
                        (a.Spread.CalcEngine.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].CalcEngine = g({}, e))),
                    a.Spread.Sheets &&
                        a.Spread.Sheets.SR &&
                        ((e = d("./dist/core/core.res.es.js")),
                        (a.Spread.Sheets.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Sheets = g({}, e))),
                    a.Spread.Sheets.Bindings &&
                        a.Spread.Sheets.Bindings.SR &&
                        ((e = d("./dist/plugins/data/data.res.es.js")),
                        (a.Spread.Sheets.Bindings.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Bindings = g({}, e))),
                    a.Spread.Sheets.Outlines &&
                        a.Spread.Sheets.Outlines.SR &&
                        ((e = d("./dist/plugins/group/group.res.es.js")),
                        (a.Spread.Sheets.Outlines.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Outlines = g({}, e))),
                    a.Spread.Sheets.ConditionalFormatting &&
                        a.Spread.Sheets.ConditionalFormatting.SR &&
                        ((e = d("./dist/plugins/conditional/conditional.res.es.js")),
                        (a.Spread.Sheets.ConditionalFormatting.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].ConditionalFormatting = g({}, e))),
                    a.Spread.Sheets.Touch &&
                        a.Spread.Sheets.Touch.SR &&
                        ((e = d("./dist/plugins/touch/touch.res.es.js")),
                        (a.Spread.Sheets.Touch.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Touch = g({}, e))),
                    a.Spread.Sheets.FloatingObjects &&
                        a.Spread.Sheets.FloatingObjects.SR &&
                        ((e = d("./dist/plugins/floatingObject/floatingobject.res.es.js")),
                        (a.Spread.Sheets.FloatingObjects.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].FloatingObjects = g({}, e))),
                    a.Spread.Sheets.CellTypes &&
                        a.Spread.Sheets.CellTypes.SR &&
                        ((e = d("./dist/plugins/celltype/celltypes.res.es.js")),
                        (a.Spread.Sheets.CellTypes.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].CellTypes = g({}, e))),
                    a.Spread.Sheets.Filter &&
                        a.Spread.Sheets.Filter.SR &&
                        ((e = d("./dist/plugins/filter/filter.res.es.js")),
                        (a.Spread.Sheets.Filter.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Filter = g({}, e))),
                    a.Spread.Sheets.Tables &&
                        a.Spread.Sheets.Tables.SR &&
                        ((e = d("./dist/plugins/table/table.res.es.js")),
                        (a.Spread.Sheets.Tables.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Tables = g({}, e))),
                    a.Spread.Sheets.Fill &&
                        a.Spread.Sheets.Fill.SR &&
                        ((e = d("./dist/plugins/fill/fill.res.es.js")),
                        (a.Spread.Sheets.Fill.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Fill = g({}, e))),
                    a.Spread.Sheets.ContextMenu &&
                        a.Spread.Sheets.ContextMenu.SR &&
                        ((e = d("./dist/plugins/contextMenu/context-menu.res.es.js")),
                        (a.Spread.Sheets.ContextMenu.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].ContextMenu = g({}, e))),
                    a.Spread.Sheets.OutlineColumn &&
                        a.Spread.Sheets.OutlineColumn.SR &&
                        ((e = d("./dist/plugins/outlineColumn/outlineColumn.res.es.js")),
                        (a.Spread.Sheets.OutlineColumn.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].OutlineColumn = g({}, e))),
                    a.Spread.Sheets.StatusBar &&
                        a.Spread.Sheets.StatusBar.SR &&
                        ((e = d("./dist/plugins/statusBar/statusBar.res.es.js")),
                        (a.Spread.Sheets.StatusBar.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].StatusBar = g({}, e))),
                    a.Spread.Sheets.AutoMerge &&
                        a.Spread.Sheets.AutoMerge.SR &&
                        ((e = d("./dist/plugins/autoMerge/autoMerge.res.es.js")),
                        (a.Spread.Sheets.AutoMerge.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].AutoMerge = g({}, e))),
                    a.Spread.Sheets.Print &&
                        a.Spread.Sheets.Print.SR &&
                        ((e = d("./dist/plugins/print/print.res.es.js")),
                        (a.Spread.Sheets.Print.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Print = g({}, e))),
                    a.Spread.Sheets.Charts &&
                        a.Spread.Sheets.Charts.SR &&
                        ((e = d("./dist/plugins/chart/chart.res.es.js")),
                        (a.Spread.Sheets.Charts.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Charts = g({}, e))),
                    a.Spread.Sheets.PDF &&
                        a.Spread.Sheets.PDF.SR &&
                        ((e = d("./dist/plugins/exportPDF/printPdf.res.es.js")),
                        (a.Spread.Sheets.PDF.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].PDF = g({}, e))),
                    a.Spread.Sheets.Shapes &&
                        a.Spread.Sheets.Shapes.SR &&
                        ((e = d("./dist/plugins/shape/shape.res.es.js")),
                        (a.Spread.Sheets.Shapes.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Shapes = g({}, e))),
                    a.Spread.Sheets.Slicers &&
                        a.Spread.Sheets.Slicers.SR &&
                        ((e = d("./dist/plugins/slicer/slicer.res.es.js")),
                        (a.Spread.Sheets.Slicers.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].Slicers = g({}, e))),
                    a.Spread.Pivot &&
                        a.Spread.Pivot.SR &&
                        ((e = d("./dist/plugins/pivot/pivot.res.es.js")),
                        (a.Spread.Pivot.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].PivotTables = g({}, e))),
                    a.Spread.Sheets.TableSheet &&
                        a.Spread.Sheets.TableSheet.SR &&
                        ((e = d("./dist/plugins/tableSheet/tableSheet.res.es.js")),
                        (a.Spread.Sheets.TableSheet.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].TableSheet = g({}, e))),
                    a.Spread.Sheets.IO &&
                        a.Spread.Sheets.IO.SR &&
                        ((e = d("./dist/plugins/io/io.res.es.js")),
                        (a.Spread.Sheets.IO.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        a.Spread.Common.CultureManager.KLJ["es-ES"] || (a.Spread.Common.CultureManager.KLJ["es-ES"] = {}),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].IO = g({}, e))),
                    a.Pivot &&
                        a.Pivot.SR &&
                        ((e = d("./node_modules_local/@grapecity/js-pivot/dist/gc.pivot.resources.es.js").SR.es),
                        (a.Pivot.SR.es = f({}, a.Spread.Common.SR.es || {}, e)),
                        (a.Spread.Common.CultureManager.KLJ["es-ES"].PivotEngine = g({}, e))),
                    (b.exports = a.Spread);
            },
            Common: function (b, c) {
                b.exports = a.Spread;
            },
            Core: function (b, c) {
                b.exports = a.Spread.Sheets;
            },
        }));
});
